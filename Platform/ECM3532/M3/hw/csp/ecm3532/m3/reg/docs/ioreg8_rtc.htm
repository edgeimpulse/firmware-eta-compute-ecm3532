<HTML>
<HEAD>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<TITLE>IOREG FILE: CAYMAN RTC REAL TIME CLOCK (RTC)
</TITLE>
</HEAD>
<BODY>
<H1 align="center">On-Line Documentation for CAYMAN  :  RTC <BR>  Bus Type: PERIPHERAL BUS</H1>
<FONT size="+2"><B><P align="center">REAL TIME CLOCK (RTC)</P></B><B</FONT><BR><HR>
<FONT face="Helvetica" size="-1"><P align="center"><B> Put banner announcement here. </B></P></FONT><HR>
<BR><B>The real time clock (RTC) is part of the Always On block. In addition to maintaining the real time epoch for the SOC, it also contains all of the control registers of AO block, e.g. registers for the power controller.</B><BR><BR><HR>
<FONT face="Helvetica" size="-1"><P align="left"><B> Source File Name: ./src/ioreg8_rtc.src <BR> Source File Modification Date Thu Jan 23 16:04:59 2020 <BR> html creation date January 23, 2020</B></P></FONT>
<H2 id="index"> RTC Register Index</H2>
<B> <CODE>ADDRESS</CODE></B><BR>
<B><CODE>0x50010000: </CODE></B><A id = "AO_CSRindex" href="#AO_CSR"><B>IO_RTC_AO_CSR</A></B><BR>
<B><CODE>0x50010004: </CODE></B><A id = "AO_REVIDindex" href="#AO_REVID"><B>IO_RTC_AO_REVID</A></B><BR>
<B><CODE>0x50010020: </CODE></B><A id = "CSRAindex" href="#CSRA"><B>IO_RTC_CSRA</A></B><BR>
<B><CODE>0x50010024: </CODE></B><A id = "CSRBindex" href="#CSRB"><B>IO_RTC_CSRB</A></B><BR>
<B><CODE>0x50010028: </CODE></B><A id = "TODAindex" href="#TODA"><B>IO_RTC_TODA</A></B><BR>
<B><CODE>0x5001002c: </CODE></B><A id = "TODBindex" href="#TODB"><B>IO_RTC_TODB</A></B><BR>
<B><CODE>0x50010030: </CODE></B><A id = "ALARMAindex" href="#ALARMA"><B>IO_RTC_ALARMA</A></B><BR>
<B><CODE>0x50010034: </CODE></B><A id = "ALARMBindex" href="#ALARMB"><B>IO_RTC_ALARMB</A></B><BR>
<B><CODE>0x50010040: </CODE></B><A id = "WDT_COUNTERindex" href="#WDT_COUNTER"><B>IO_RTC_WDT_COUNTER</A></B><BR>
<B><CODE>0x50010044: </CODE></B><A id = "WDT_ALARMindex" href="#WDT_ALARM"><B>IO_RTC_WDT_ALARM</A></B><BR>
<B><CODE>0x50010048: </CODE></B><A id = "WDT_RELOADindex" href="#WDT_RELOAD"><B>IO_RTC_WDT_RELOAD</A></B><BR>
<B><CODE>0x50010050: </CODE></B><A id = "TMRindex" href="#TMR"><B>IO_RTC_TMR</A></B><BR>
<B><CODE>0x50010054: </CODE></B><A id = "TMR_RELOADindex" href="#TMR_RELOAD"><B>IO_RTC_TMR_RELOAD</A></B><BR>
<B><CODE>0x50010058: </CODE></B><A id = "SEND_PORindex" href="#SEND_POR"><B>IO_RTC_SEND_POR</A></B><BR>
<B><CODE>0x5001005c: </CODE></B><A id = "UNLOCK_DEBUGindex" href="#UNLOCK_DEBUG"><B>IO_RTC_UNLOCK_DEBUG</A></B><BR>
<B><CODE>0x50010060: </CODE></B><A id = "PWRindex" href="#PWR"><B>IO_RTC_PWR</A></B><BR>
<B><CODE>0x50010064: </CODE></B><A id = "PWR_SETindex" href="#PWR_SET"><B>IO_RTC_PWR_SET</A></B><BR>
<B><CODE>0x50010068: </CODE></B><A id = "PWR_CLEARindex" href="#PWR_CLEAR"><B>IO_RTC_PWR_CLEAR</A></B><BR>
<B><CODE>0x5001006c: </CODE></B><A id = "OSC_CSRindex" href="#OSC_CSR"><B>IO_RTC_OSC_CSR</A></B><BR>
<B><CODE>0x50010070: </CODE></B><A id = "PMIC_AO_CSRindex" href="#PMIC_AO_CSR"><B>IO_RTC_PMIC_AO_CSR</A></B><BR>
<B><CODE>0x50010074: </CODE></B><A id = "PMIC_MEM_CSRindex" href="#PMIC_MEM_CSR"><B>IO_RTC_PMIC_MEM_CSR</A></B><BR>
<B><CODE>0x50010078: </CODE></B><A id = "PMIC_M3_CSRindex" href="#PMIC_M3_CSR"><B>IO_RTC_PMIC_M3_CSR</A></B><BR>
<B><CODE>0x5001007c: </CODE></B><A id = "PMIC_M3_CSR2index" href="#PMIC_M3_CSR2"><B>IO_RTC_PMIC_M3_CSR2</A></B><BR>
<B><CODE>0x50010080: </CODE></B><A id = "LDO_CSRindex" href="#LDO_CSR"><B>IO_RTC_LDO_CSR</A></B><BR>
<B><CODE>0x50010084: </CODE></B><A id = "PMIC_FREF_AO_CSRindex" href="#PMIC_FREF_AO_CSR"><B>IO_RTC_PMIC_FREF_AO_CSR</A></B><BR>
<B><CODE>0x50010088: </CODE></B><A id = "BUCK_DSP_CSRindex" href="#BUCK_DSP_CSR"><B>IO_RTC_BUCK_DSP_CSR</A></B><BR>
<B><CODE>0x5001008c: </CODE></B><A id = "BUCK_DSP_CSR2index" href="#BUCK_DSP_CSR2"><B>IO_RTC_BUCK_DSP_CSR2</A></B><BR>
<B><CODE>0x50010090: </CODE></B><A id = "PULL_ENABLEindex" href="#PULL_ENABLE"><B>IO_RTC_PULL_ENABLE</A></B><BR>
<B><CODE>0x50010094: </CODE></B><A id = "PULL_DIRECTIONindex" href="#PULL_DIRECTION"><B>IO_RTC_PULL_DIRECTION</A></B><BR>
<B><CODE>0x50010098: </CODE></B><A id = "SPI0_CTRLindex" href="#SPI0_CTRL"><B>IO_RTC_SPI0_CTRL</A></B><BR>
<B><CODE>0x5001009c: </CODE></B><A id = "UART0_CTRLindex" href="#UART0_CTRL"><B>IO_RTC_UART0_CTRL</A></B><BR>
<B><CODE>0x500100a0: </CODE></B><A id = "AO_CSR2index" href="#AO_CSR2"><B>IO_RTC_AO_CSR2</A></B><BR>
<B><CODE>0x500100a4: </CODE></B><A id = "BROWNOUTindex" href="#BROWNOUT"><B>IO_RTC_BROWNOUT</A></B><BR>
<B><CODE>0x500100b0: </CODE></B><A id = "OSC_CSR2index" href="#OSC_CSR2"><B>IO_RTC_OSC_CSR2</A></B><BR>
<B><CODE>0x500100c0: </CODE></B><A id = "CLKOUT_CFGindex" href="#CLKOUT_CFG"><B>IO_RTC_CLKOUT_CFG</A></B><BR>
<B><CODE>0x500100c4: </CODE></B><A id = "CLKOUT_CTRLindex" href="#CLKOUT_CTRL"><B>IO_RTC_CLKOUT_CTRL</A></B><BR>
<B><CODE>0x500100d0: </CODE></B><A id = "DRIFT_PPQindex" href="#DRIFT_PPQ"><B>IO_RTC_DRIFT_PPQ</A></B><BR>
<B><CODE>0x500100d4: </CODE></B><A id = "DRIFT_INTEGindex" href="#DRIFT_INTEG"><B>IO_RTC_DRIFT_INTEG</A></B><BR>
<B><CODE>0x500100d8: </CODE></B><A id = "DRIFT_STATindex" href="#DRIFT_STAT"><B>IO_RTC_DRIFT_STAT</A></B><BR>
<B><CODE>0x500100e0: </CODE></B><A id = "NVRAMAindex" href="#NVRAMA"><B>IO_RTC_NVRAMA</A></B><BR>
<B><CODE>0x500100e4: </CODE></B><A id = "NVRAMBindex" href="#NVRAMB"><B>IO_RTC_NVRAMB</A></B><BR>
<B><CODE>0x500100e8: </CODE></B><A id = "NVRAMCindex" href="#NVRAMC"><B>IO_RTC_NVRAMC</A></B><BR>
<B><CODE>0x500100ec: </CODE></B><A id = "NVRAMDindex" href="#NVRAMD"><B>IO_RTC_NVRAMD</A></B><BR>
<B><CODE>0x500100f0: </CODE></B><A id = "DEBUGindex" href="#DEBUG"><B>IO_RTC_DEBUG</A></B><BR>
<B><CODE>0x500100f4: </CODE></B><A id = "DEBUG_READ_WRITEindex" href="#DEBUG_READ_WRITE"><B>IO_RTC_DEBUG_READ_WRITE</A></B><BR>
<B><CODE>0x500100f8: </CODE></B><A id = "DEBUG0_READ_ONLYindex" href="#DEBUG0_READ_ONLY"><B>IO_RTC_DEBUG0_READ_ONLY</A></B><BR>
<B><CODE>0x500100fc: </CODE></B><A id = "DEBUG1_READ_ONLYindex" href="#DEBUG1_READ_ONLY"><B>IO_RTC_DEBUG1_READ_ONLY</A></B><BR>
<BR><HR>
<H2 id="AO_CSR"><A href="#index">
IO_RTC_AO_CSR</A></H2>
<P><FONT size="+1"><B>ALWAYS ON CONFIGURATION AND STATUS REGISTER</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_AO_CSR ADDRESS:</B></TD>
<TD><CODE>0x50010000</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#e0e0e0" colspan="16">RSVD2<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#e0e0e0" colspan="8">RSVD1<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="8">WARM_START_MODE<BR><TT>0x0</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:16</TD>
<TD nowrap>RSVD2</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>15:8</TD>
<TD nowrap>RSVD1</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>7:0</TD>
<TD nowrap>WARM_START_MODE</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>WARM START MODE</TD>
<TD>BOOTROM assumes 0x00 is a cold start and any non-zero value is a warm start. This value is also visible in the external status register in the GPIO inside the M3 complex. NOTE: a value written to this value survives all resets except the master POR that happens at true first chip power up.
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>Configuration and status bits for the always on block, which includes the RTC, WDT, POWER, etc.</P>
<BR><HR>
<H2 id="AO_REVID"><A href="#index">
IO_RTC_AO_REVID</A></H2>
<P><FONT size="+1"><B>ALWAYS ON REVISION REGISTER</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_AO_REVID ADDRESS:</B></TD>
<TD><CODE>0x50010004</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#c0c0c0" colspan="4">REV_ALL_LAYER<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#c0c0c0" colspan="4">REV_POLY<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#c0c0c0" colspan="4">REV_M6<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#c0c0c0" colspan="4">REV_M5<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#c0c0c0" colspan="4">REV_M4<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#c0c0c0" colspan="4">REV_M3<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#c0c0c0" colspan="4">REV_M2<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#c0c0c0" colspan="4">REV_M1<BR><TT>0x0</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:28</TD>
<TD nowrap>REV_ALL_LAYER</TD>
<TD nowrap>RO</TD>
<TD nowrap>Revision ID Major Number</TD>
<TD>Firt mask set is 0x0.
<TR align="left">
<TD nowrap>27:24</TD>
<TD nowrap>REV_POLY</TD>
<TD nowrap>RO</TD>
<TD nowrap>Revision for any poly revisions.</TD>
<TD>Firt mask set is 0x0.
<TR align="left">
<TD nowrap>23:20</TD>
<TD nowrap>REV_M6</TD>
<TD nowrap>RO</TD>
<TD nowrap>Revision for metal 6</TD>
<TD>Firt mask set is 0x0.
<TR align="left">
<TD nowrap>19:16</TD>
<TD nowrap>REV_M5</TD>
<TD nowrap>RO</TD>
<TD nowrap>Revision for metal 5</TD>
<TD>Firt mask set is 0x0.
<TR align="left">
<TD nowrap>15:12</TD>
<TD nowrap>REV_M4</TD>
<TD nowrap>RO</TD>
<TD nowrap>Revision for metal 4</TD>
<TD>Firt mask set is 0x0.
<TR align="left">
<TD nowrap>11:8</TD>
<TD nowrap>REV_M3</TD>
<TD nowrap>RO</TD>
<TD nowrap>Revision for metal 3</TD>
<TD>Firt mask set is 0x0.
<TR align="left">
<TD nowrap>7:4</TD>
<TD nowrap>REV_M2</TD>
<TD nowrap>RO</TD>
<TD nowrap>Revision for metal 2</TD>
<TD>Firt mask set is 0x0.
<TR align="left">
<TD nowrap>3:0</TD>
<TD nowrap>REV_M1</TD>
<TD nowrap>RO</TD>
<TD nowrap>Revision for metal 1</TD>
<TD>Firt mask set is 0x0.
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>Revision ID for the entire chip. This displays any mods for each of the 6 metal layers, poly layer mods and also an overall all layer change stepping number.</P>
<BR><HR>
<H2 id="CSRA"><A href="#index">
IO_RTC_CSRA</A></H2>
<P><FONT size="+1"><B>RTC CONFIGURATION AND STATUS REGISTER</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_CSRA ADDRESS:</B></TD>
<TD><CODE>0x50010020</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#e0e0e0" colspan="17">RSVD2<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">PER_MINUTE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">PER_SECOND<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">MATCH_DAY_DATE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">MATCH_MONTHS<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">MATCH_HOURS<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">MATCH_MINUTES<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">MATCH_SECONDS<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#e0e0e0" colspan="6">RSVD1<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">INT_ENABLE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">INT_STAT<BR><TT>0x0</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:15</TD>
<TD nowrap>RSVD2</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>14:14</TD>
<TD nowrap>PER_MINUTE</TD>
<TD nowrap>RW</TD>
<TD nowrap>INTERRUPT PER MINUTE</TD>
<TD>Set to 1 to interrrupt every minute.
<TR align="left">
<TD nowrap>13:13</TD>
<TD nowrap>PER_SECOND</TD>
<TD nowrap>RW</TD>
<TD nowrap>INTERRUPT PER SECOND</TD>
<TD>Set to 1 to interrrupt every second.
<TR align="left">
<TD nowrap>12:12</TD>
<TD nowrap>MATCH_DAY_DATE</TD>
<TD nowrap>RW</TD>
<TD nowrap>MATCH DAY OR DATE</TD>
<TD>Set to 1 to match the day or date.
<TR align="left">
<TD nowrap>11:11</TD>
<TD nowrap>MATCH_MONTHS</TD>
<TD nowrap>RW</TD>
<TD nowrap>MATCH MONTHS</TD>
<TD>Set to 1 to match the current month.
<TR align="left">
<TD nowrap>10:10</TD>
<TD nowrap>MATCH_HOURS</TD>
<TD nowrap>RW</TD>
<TD nowrap>MATCH HOURS</TD>
<TD>Set to 1 to match the current hour.
<TR align="left">
<TD nowrap>9:9</TD>
<TD nowrap>MATCH_MINUTES</TD>
<TD nowrap>RW</TD>
<TD nowrap>MATCH MINUTES</TD>
<TD>Set to 1 to match the current minutes.
<TR align="left">
<TD nowrap>8:8</TD>
<TD nowrap>MATCH_SECONDS</TD>
<TD nowrap>RW</TD>
<TD nowrap>MATCH SECONDS</TD>
<TD>Set to 1 to match the current minutes.
<TR align="left">
<TD nowrap>7:2</TD>
<TD nowrap>RSVD1</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>1:1</TD>
<TD nowrap>INT_ENABLE</TD>
<TD nowrap>RW</TD>
<TD nowrap>INTERRUPT ENABLE FOR ALARM A</TD>
<TD>Interrupt enable bit for ALARM A comparison interrupts.
<TR align="left">
<TD nowrap>0:0</TD>
<TD nowrap>INT_STAT</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>INTERRUPT STATUS FOR ALARM A</TD>
<TD>Interrupt status bit for ALARM A comparison (set by an exact match).  Write one to this bit to clear it.
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>Configuration and status bits for the real time clock (RTC).</P>
<BR><HR>
<H2 id="CSRB"><A href="#index">
IO_RTC_CSRB</A></H2>
<P><FONT size="+1"><B>RTC CONFIGURATION AND STATUS REGISTER</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_CSRB ADDRESS:</B></TD>
<TD><CODE>0x50010024</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#e0e0e0" colspan="17">RSVD2<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">PER_MINUTE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">PER_SECOND<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">MATCH_DAY_DATE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">MATCH_MONTHS<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">MATCH_HOURS<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">MATCH_MINUTES<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">MATCH_SECONDS<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#e0e0e0" colspan="6">RSVD1<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">INT_ENABLE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">INT_STAT<BR><TT>0x0</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:15</TD>
<TD nowrap>RSVD2</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>14:14</TD>
<TD nowrap>PER_MINUTE</TD>
<TD nowrap>RW</TD>
<TD nowrap>INTERRUPT PER MINUTE</TD>
<TD>Set to 1 to interrrupt every minute.
<TR align="left">
<TD nowrap>13:13</TD>
<TD nowrap>PER_SECOND</TD>
<TD nowrap>RW</TD>
<TD nowrap>INTERRUPT PER SECOND</TD>
<TD>Set to 1 to interrrupt every second.
<TR align="left">
<TD nowrap>12:12</TD>
<TD nowrap>MATCH_DAY_DATE</TD>
<TD nowrap>RW</TD>
<TD nowrap>MATCH DAY OR DATE</TD>
<TD>Set to 1 to match the day or date.
<TR align="left">
<TD nowrap>11:11</TD>
<TD nowrap>MATCH_MONTHS</TD>
<TD nowrap>RW</TD>
<TD nowrap>MATCH MONTHS</TD>
<TD>Set to 1 to match the current month.
<TR align="left">
<TD nowrap>10:10</TD>
<TD nowrap>MATCH_HOURS</TD>
<TD nowrap>RW</TD>
<TD nowrap>MATCH HOURS</TD>
<TD>Set to 1 to match the current hour.
<TR align="left">
<TD nowrap>9:9</TD>
<TD nowrap>MATCH_MINUTES</TD>
<TD nowrap>RW</TD>
<TD nowrap>MATCH MINUTES</TD>
<TD>Set to 1 to match the current minutes.
<TR align="left">
<TD nowrap>8:8</TD>
<TD nowrap>MATCH_SECONDS</TD>
<TD nowrap>RW</TD>
<TD nowrap>MATCH SECONDS</TD>
<TD>Set to 1 to match the current minutes.
<TR align="left">
<TD nowrap>7:2</TD>
<TD nowrap>RSVD1</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>1:1</TD>
<TD nowrap>INT_ENABLE</TD>
<TD nowrap>RW</TD>
<TD nowrap>INTERRUPT ENABLE FOR ALARM B</TD>
<TD>Interrupt enable bit for ALARM B comparison interrupts.
<TR align="left">
<TD nowrap>0:0</TD>
<TD nowrap>INT_STAT</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>INTERRUPT STATUS FOR ALARM B</TD>
<TD>Interrupt status bit for ALARM B comparison (set by an exact match).  Write one to this bit to clear it.
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>Configuration and status bits for the real time clock (RTC).</P>
<BR><HR>
<H2 id="TODA"><A href="#index">
IO_RTC_TODA</A></H2>
<P><FONT size="+1"><B>RTC TIME OF DAY REGISTER A</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_TODA ADDRESS:</B></TD>
<TD><CODE>0x50010028</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#ffffff" colspan="5">MONTH<BR><TT>0x1</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="6">DATE<BR><TT>0x1</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="6">HOURS<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="7">MINUTES<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#e0e0e0" colspan="1">RSVD1<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="7">SECONDS<BR><TT>0x0</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:27</TD>
<TD nowrap>MONTH</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>CURRENT MONTH</TD>
<TD>Current Value of Month (1..12) in the time of day.
<TR align="left">
<TD nowrap>26:21</TD>
<TD nowrap>DATE</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>CURRENT DATE</TD>
<TD>Current Value of Date (0..3,0..9) in the time of day.
<TR align="left">
<TD nowrap>20:15</TD>
<TD nowrap>HOURS</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>CURRENT HOURS</TD>
<TD>Current Value of Hours (0..2,0..9) in the time of day.
<TR align="left">
<TD nowrap>14:8</TD>
<TD nowrap>MINUTES</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>CURRENT MINUTES</TD>
<TD>Current Value of Minutes (0..5,0..9) in the time of day.
<TR align="left">
<TD nowrap>7:7</TD>
<TD nowrap>RSVD1</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>6:0</TD>
<TD nowrap>SECONDS</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>CURRENT SECONDS</TD>
<TD>Current Value of Seconds(0..5,0..9 in the time of day.
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>Current time of day as recorded in the RTC. NOTE: This register must be written 32 bits at a time. The counter updates on the last byte written.</P>
<BR><HR>
<H2 id="TODB"><A href="#index">
IO_RTC_TODB</A></H2>
<P><FONT size="+1"><B>RTC TIME OF DAY REGISTER B</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_TODB ADDRESS:</B></TD>
<TD><CODE>0x5001002c</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#e0e0e0" colspan="7">RSVD3<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">TWELVE_HOUR<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#e0e0e0" colspan="7">RSVD2<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">CENTURY<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#e0e0e0" colspan="5">RSVD1<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="3">DAY<BR><TT>0x1</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="8">YEAR<BR><TT>0x0</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:25</TD>
<TD nowrap>RSVD3</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>24:24</TD>
<TD nowrap>TWELVE_HOUR</TD>
<TD nowrap>RW</TD>
<TD nowrap>TWELVE HOUR MODE</TD>
<TD>Set to 1 for 12 hour mode. Set to 0 for 24 hour mode.
<TR align="left">
<TD nowrap>23:17</TD>
<TD nowrap>RSVD2</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>16:16</TD>
<TD nowrap>CENTURY</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>CURRENT Century</TD>
<TD>Current Value of Century (0..1) in the time of day.
<TR align="left">
<TD nowrap>15:11</TD>
<TD nowrap>RSVD1</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>10:8</TD>
<TD nowrap>DAY</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>CURRENT DAY OF WEEK</TD>
<TD>Current Value of Year (1..7) in the time of day.
<TR align="left">
<TD nowrap>7:0</TD>
<TD nowrap>YEAR</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>CURRENT YEAR</TD>
<TD>Current Value of Year (0..9,0..9) in the time of day.
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>Current time of day as recorded in the RTC. NOTE: Write to Time of Day B (TODB) before writing to Time of Day A (TODA).  This register must be written 32 bits at a time. The counter updates on the last byte written.</P>
<BR><HR>
<H2 id="ALARMA"><A href="#index">
IO_RTC_ALARMA</A></H2>
<P><FONT size="+1"><B>RTC ALARM REGISTER A</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_ALARMA ADDRESS:</B></TD>
<TD><CODE>0x50010030</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#ffffff" colspan="5">MONTH<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="6">DATE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">DAY<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="6">HOURS<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="7">MINUTES<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="7">SECONDS<BR><TT>0x0</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:27</TD>
<TD nowrap>MONTH</TD>
<TD nowrap>RW</TD>
<TD nowrap>MONTH</TD>
<TD>Value of Month (1..12)  to be compared against the time of day.
<TR align="left">
<TD nowrap>26:21</TD>
<TD nowrap>DATE</TD>
<TD nowrap>RW</TD>
<TD nowrap>DATE</TD>
<TD>Value of Date (0..3,0..9) to be compared against the time of day.
<TR align="left">
<TD nowrap>20:20</TD>
<TD nowrap>DAY</TD>
<TD nowrap>RW</TD>
<TD nowrap>DAY NOT DATE</TD>
<TD>Set to one to match alarm on day instead of date.
<TR align="left">
<TD nowrap>19:14</TD>
<TD nowrap>HOURS</TD>
<TD nowrap>RW</TD>
<TD nowrap>HOURS</TD>
<TD>Value of Hours (0..2,0..9) to be compared against the time of day.
<TR align="left">
<TD nowrap>13:7</TD>
<TD nowrap>MINUTES</TD>
<TD nowrap>RW</TD>
<TD nowrap>MINUTES</TD>
<TD>Value of Minutes (0..5,0..9) to be compared against the time of day.
<TR align="left">
<TD nowrap>6:0</TD>
<TD nowrap>SECONDS</TD>
<TD nowrap>RW</TD>
<TD nowrap>SECONDS</TD>
<TD>Value of Seconds(0..5,0..9) to be compared against the time of day.
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>ALARM value to match against the current time of day. NOTE: ALARM A interrupt should not be enabled when this register is written. The ALARM A interrupt should be cleared after this register is written.</P>
<BR><HR>
<H2 id="ALARMB"><A href="#index">
IO_RTC_ALARMB</A></H2>
<P><FONT size="+1"><B>RTC ALARM REGISTER A</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_ALARMB ADDRESS:</B></TD>
<TD><CODE>0x50010034</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#ffffff" colspan="5">MONTH<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="6">DATE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">DAY<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="6">HOURS<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="7">MINUTES<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="7">SECONDS<BR><TT>0x0</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:27</TD>
<TD nowrap>MONTH</TD>
<TD nowrap>RW</TD>
<TD nowrap>MONTH</TD>
<TD>Value of Month (1..12)  to be compared against the time of day.
<TR align="left">
<TD nowrap>26:21</TD>
<TD nowrap>DATE</TD>
<TD nowrap>RW</TD>
<TD nowrap>DATE</TD>
<TD>Value of Date (0..3,0..9) to be compared against the time of day.
<TR align="left">
<TD nowrap>20:20</TD>
<TD nowrap>DAY</TD>
<TD nowrap>RW</TD>
<TD nowrap>DAY NOT DATE</TD>
<TD>Set to one to match alarm on day instead of date.
<TR align="left">
<TD nowrap>19:14</TD>
<TD nowrap>HOURS</TD>
<TD nowrap>RW</TD>
<TD nowrap>HOURS</TD>
<TD>Value of Hours (0..2,0..9) to be compared against the time of day.
<TR align="left">
<TD nowrap>13:7</TD>
<TD nowrap>MINUTES</TD>
<TD nowrap>RW</TD>
<TD nowrap>MINUTES</TD>
<TD>Value of Minutes (0..5,0..9) to be compared against the time of day.
<TR align="left">
<TD nowrap>6:0</TD>
<TD nowrap>SECONDS</TD>
<TD nowrap>RW</TD>
<TD nowrap>SECONDS</TD>
<TD>Value of Seconds(0..5,0..9) to be compared against the time of day.
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>ALARM value to match against the current time of day. NOTE: ALARM B interrupt should not be enabled when this register is written. The ALARM B interrupt should be cleared after this register is written.</P>
<BR><HR>
<H2 id="WDT_COUNTER"><A href="#index">
IO_RTC_WDT_COUNTER</A></H2>
<P><FONT size="+1"><B>WATCH DOG TIMER COUNTER</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_WDT_COUNTER ADDRESS:</B></TD>
<TD><CODE>0x50010040</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#e0e0e0" colspan="12">RSVD<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="20">COUNT<BR><TT>0x0</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:20</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>19:0</TD>
<TD nowrap>COUNT</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>CURRENT COUNT</TD>
<TD>Current Value of WDT COUNTER
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>WDT COUNTER: This register decrements toward zero. If it gets there and resets are enabled then a WDT is issued. This can have the aeffect of waking up the peripheral block and then the M3. The peripheral rstgen status will reflect both a POR and a WDT reset cause in this case. If an interrupt occurs it can also wake up the peripheral block and M3.  If the interrupt causes the wake up then it will also be forwarded to the NVIC once the M3 is powered up and out of reset. Write any value to byte 0 of this register to cause the counter to be reloaded from WDT_RELOAD register.</P>
<BR><HR>
<H2 id="WDT_ALARM"><A href="#index">
IO_RTC_WDT_ALARM</A></H2>
<P><FONT size="+1"><B>WATCH DOG TIMER ALARM VALUE</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_WDT_ALARM ADDRESS:</B></TD>
<TD><CODE>0x50010044</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#ffffff" colspan="1">INT_STAT<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">RESET_REQ<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#c0c0c0" colspan="1">RUNNING<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#e0e0e0" colspan="3">RSVD2<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#c0c0c0" colspan="1">PWRACK<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#c0c0c0" colspan="1">PWRREQ<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">IRQ_EN<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">POR<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">RESET<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">WDT_RUN<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="20">VALUE<BR><TT>0x0</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:31</TD>
<TD nowrap>INT_STAT</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>INTERRUPT STATUS BIT</TD>
<TD>This bit is set to one if a watch dog timer alarm interrupt has been detected. It is clear by writing a one to this bit.
<BR>CLEAR = 1 Clear the watch dog timer interrupt status bit.
<TR align="left">
<TD nowrap>30:30</TD>
<TD nowrap>RESET_REQ</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>RESET REQUEST BIT</TD>
<TD>This bit is set to one if the watch dog timer counter reaches zero. If the RESET enable bit is also a 1 then this will trigger the cascade of powering up the M3 and then giving it a watch dog timer reset.  Firmware can write this bit to either zero or one.
<BR>CLEAR = 0 Clear the watch dog timer reset request bit.
<BR>SET = 1 Set the watch dog timer reset request bit.
<TR align="left">
<TD nowrap>29:29</TD>
<TD nowrap>RUNNING</TD>
<TD nowrap>RO</TD>
<TD nowrap>RUNNING STATUS BIT</TD>
<TD>This bit is set to one if the watch dog timer counter running (decrementing). Clear the enable WDT operation bit reset this read only bit.
<TR align="left">
<TD nowrap>28:26</TD>
<TD nowrap>RSVD2</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>25:25</TD>
<TD nowrap>PWRACK</TD>
<TD nowrap>RO</TD>
<TD nowrap>POWERUP ACK</TD>
<TD>This read only bit shows the state of the power up acknowledge sent from the power controller.
<TR align="left">
<TD nowrap>24:24</TD>
<TD nowrap>PWRREQ</TD>
<TD nowrap>RO</TD>
<TD nowrap>POWERUP REQUEST</TD>
<TD>This read only bit shows the state of the power up request sent to the power controller.
<TR align="left">
<TD nowrap>23:23</TD>
<TD nowrap>IRQ_EN</TD>
<TD nowrap>RW</TD>
<TD nowrap>ENABLE WDT INTERRUPTS</TD>
<TD>Set to one to enable the WDT to interupt the M3. Note an interrupt request will power up the M3 if necessary.
<BR>ENABLE = 1 Enable the watch dog timer interrupt.
<BR>DISABLE = 0 Disable the watch dog timer interrupt.
<TR align="left">
<TD nowrap>22:22</TD>
<TD nowrap>POR</TD>
<TD nowrap>RW</TD>
<TD nowrap>ENABLE WDT POWER ON RESET (POR)</TD>
<TD>Set to one to enable the WDT to POR the chip.
<BR>ENABLE = 1 Enable watch dog timer POR.
<BR>DISABLE = 0 Disable watch dog timer POR.
<TR align="left">
<TD nowrap>21:21</TD>
<TD nowrap>RESET</TD>
<TD nowrap>RW</TD>
<TD nowrap>ENABLE WDT RESETS</TD>
<TD>Set to one to enable the WDT to reset the chip.
<BR>ENABLE = 1 Enable watch dog timer resets.
<BR>DISABLE = 0 Disable watch dog timer resets.
<TR align="left">
<TD nowrap>20:20</TD>
<TD nowrap>WDT_RUN</TD>
<TD nowrap>RW</TD>
<TD nowrap>ENABLE WDT OPERATION</TD>
<TD>Set to one to enable WDT operation.
<BR>ENABLE = 1 Enable the watch dog timer.
<BR>DISABLE = 0 Disable the watch dog timer.
<TR align="left">
<TD nowrap>19:0</TD>
<TD nowrap>VALUE</TD>
<TD nowrap>RW</TD>
<TD nowrap>ALARM VALUE</TD>
<TD>Alarm value to compare against the WDT couner.
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>WDT ALARM: The contents of this register are matched agains the counter. If the counter value falls below the alarm value then a WDT interrupt status bit is set to one. If this interrupt is enable to cause a power up then the WDT interrupt can power up the peripheral block and the M3.</P>
<BR><HR>
<H2 id="WDT_RELOAD"><A href="#index">
IO_RTC_WDT_RELOAD</A></H2>
<P><FONT size="+1"><B>WATCH DOG TIMER RELOAD REGISTER</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_WDT_RELOAD ADDRESS:</B></TD>
<TD><CODE>0x50010048</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#e0e0e0" colspan="12">RSVD<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="20">VALUE<BR><TT>0x0</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:20</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>19:0</TD>
<TD nowrap>VALUE</TD>
<TD nowrap>RW</TD>
<TD nowrap>RELOAD VALUE</TD>
<TD>Load this value into the counter each time a write is directed to byte zero of the counter.
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>This register holds the value to be reloaded into the counter for each restart of the WDT. Anytime byte 0 of the counter is written then the entire counter is reloaded from this value. In addition, writing to this registers loads the counter from the data written to the RELOAD register. For normal operation, set up the bits in the ALARM register and then write the reload value to this register. This will start the watchdog operation.</P>
<BR><HR>
<H2 id="TMR"><A href="#index">
IO_RTC_TMR</A></H2>
<P><FONT size="+1"><B>ALWAYS ON TIMER</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_TMR ADDRESS:</B></TD>
<TD><CODE>0x50010050</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#e0e0e0" colspan="3">RSVD2<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">TESTMODE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">PERIODIC<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">TIMER<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">INT_ENABLE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">INT_STAT<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#e0e0e0" colspan="4">RSVD1<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="20">COUNT<BR><TT>0x0</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:29</TD>
<TD nowrap>RSVD2</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>28:28</TD>
<TD nowrap>TESTMODE</TD>
<TD nowrap>RW</TD>
<TD nowrap>TEST MODE</TD>
<TD>Write a one to this bit to enable a test mode in which the counter performs a right shift operation, inserting zeroes, instead of decrementing the count. This means the whole set of counter flip flops can be excercised in 20 clocks instead of 512K clocks. The decrementer can be checked independently with 20 initial patterns then checking the roll overs at each stage.
<BR>DECREMENT = 0 Run the timer in one shot mode (default).
<BR>RIGHT_SHIFT = 1 Let the timer run with a periodic reload when it reaches zero.
<TR align="left">
<TD nowrap>27:27</TD>
<TD nowrap>PERIODIC</TD>
<TD nowrap>RW</TD>
<TD nowrap>PERIODIC MODE</TD>
<TD>Write a one to this bit to enable a periodic mode in which the counter will be automatically reloaded and restarted when it reaches zero.
<BR>ONESHOT = 0 Run the timer in one shot mode.
<BR>RUN = 1 Let the timer run with a periodic reload when it reaches zero.
<TR align="left">
<TD nowrap>26:26</TD>
<TD nowrap>TIMER</TD>
<TD nowrap>RW</TD>
<TD nowrap>TIMER RUN CONTROL</TD>
<TD>Write a one to this bit to enable the counter to decrement.
<BR>STOP = 0 Stop the timer.
<BR>RUN = 1 Let the timer run.
<TR align="left">
<TD nowrap>25:25</TD>
<TD nowrap>INT_ENABLE</TD>
<TD nowrap>RW</TD>
<TD nowrap>INTERRUPT ENABLE BIT</TD>
<TD>Write a one to this bit to enable the interrupt status bit to cause an interrupt to the M3 and if necessary, a power up of the M3.
<TR align="left">
<TD nowrap>24:24</TD>
<TD nowrap>INT_STAT</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>INTERRUPT STATUS BIT</TD>
<TD>This bit is set when the counter decrements from one to zero. It is cleared by writing a one to it.
<TR align="left">
<TD nowrap>23:20</TD>
<TD nowrap>RSVD1</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>19:0</TD>
<TD nowrap>COUNT</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>CURRENT COUNT VALUE.</TD>
<TD>Values written to this bit field update the counter. This counter decrements at a 1KHz rate. When it reaches zero, then its interrupt is generated.
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>This register controls the 1KHz timer in the always on block. This timer can be used to wake up the M3 from a complete power down state. If the M3 is powered up at the time this timer interrupts, then the M3 simply receives a timer interrupt. NOTE: if the M3 is awakened from a power down state it will receive a full POR restart before it gets the interrupt. The NVIC interrupt enable will have been reset so the interrupt will not fire until the NVIC is re-enabled.</P>
<BR><HR>
<H2 id="TMR_RELOAD"><A href="#index">
IO_RTC_TMR_RELOAD</A></H2>
<P><FONT size="+1"><B>ALWAYS ON TIMER RELOAD VALUE</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_TMR_RELOAD ADDRESS:</B></TD>
<TD><CODE>0x50010054</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#e0e0e0" colspan="12">RSVD<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="20">COUNT<BR><TT>0x0</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:20</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>19:0</TD>
<TD nowrap>COUNT</TD>
<TD nowrap>RW</TD>
<TD nowrap>RELOAD COUNT VALUE.</TD>
<TD>Values written to this bit field update the counter when it reaches 0x0 in periodic mode.
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>This register holds the reload count value</P>
<BR><HR>
<H2 id="SEND_POR"><A href="#index">
IO_RTC_SEND_POR</A></H2>
<P><FONT size="+1"><B>SEND A POR TO THE  WHOLE CHIP</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_SEND_POR ADDRESS:</B></TD>
<TD><CODE>0x50010058</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#ffffff" colspan="32">KEY<BR><TT>0x0</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:0</TD>
<TD nowrap>KEY</TD>
<TD nowrap>WO</TD>
<TD nowrap>KEY PATTERN</TD>
<TD>The POR is forced to the whole chip when this field is written with 0xdeadd00d.
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>Write 0xdeadd00d to this register to force a full POR to the chip. This is useful after writing the flash INFO page. This will also force the default settings in to the buck converters. A chip can be recovered from a dead brick state by erasing the flash and issuing this command. NOTE: to erase the flash, the buck converters may have to be restored to a working voltage first. The de-bricking bootmode will do this as well as erasing the customer portion of the INFO page.</P>
<BR><HR>
<H2 id="UNLOCK_DEBUG"><A href="#index">
IO_RTC_UNLOCK_DEBUG</A></H2>
<P><FONT size="+1"><B>UNLOCK THE DEBUGGER EVEN IF LOCKED OUT IN FLASH INFO SPACE</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_UNLOCK_DEBUG ADDRESS:</B></TD>
<TD><CODE>0x5001005c</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#ffffff" colspan="32">KEY<BR><TT>0x0</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:0</TD>
<TD nowrap>KEY</TD>
<TD nowrap>WO</TD>
<TD nowrap>KEY PATTERN</TD>
<TD>The SWD debugger port is unlocked by writing the appropriate 32-bit value here. Writing any else will turn this override feature back off. If the override is set, this register will read back 0x00000001.
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>Write the appropriate value to this register to unlock the SWD port, even if it is locked out in the flash INFO page.</P>
<BR><HR>
<H2 id="PWR"><A href="#index">
IO_RTC_PWR</A></H2>
<P><FONT size="+1"><B>POWER CONTROL REGISTER</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_PWR ADDRESS:</B></TD>
<TD><CODE>0x50010060</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#ffffff" colspan="1">POWER_DOWN<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#c0c0c0" colspan="1">FLASH_PWR_UP_CMPLT<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#c0c0c0" colspan="1">WAKE_PIN_STATE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#c0c0c0" colspan="1">ADC_PWR_STATE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#c0c0c0" colspan="1">DSP_PWR_STATE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">FLASH_V25<BR><TT>0x1</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">FLASH_PDM<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">FLASH_VREF<BR><TT>0x1</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">MEM_BUCK_FORCE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">M3_BUCK_FORCE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">M3_FLASH_FORCE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">M3_SRAM4567_FORCE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">M3_SRAM23_FORCE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">M3_SRAM1_FORCE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">M3_SRAM0_FORCE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">PERIPH_FORCE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#e0e0e0" colspan="2">RSVD2<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">GPIO_FROZEN<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">M3_FLASH<BR><TT>0x1</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">M3_SRAM4567<BR><TT>0x1</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">M3_SRAM23<BR><TT>0x1</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">M3_SRAM1<BR><TT>0x1</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">M3_SRAM0<BR><TT>0x1</TT>
</TD>
<TD align="center" bgcolor="#e0e0e0" colspan="1">RSVD1<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">DSP_BUCK<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">MEM_BUCK<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">M3_BUCK<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">ADC<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">DSP<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">M3<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">PERIPH<BR><TT>0x1</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:31</TD>
<TD nowrap>POWER_DOWN</TD>
<TD nowrap>WO</TD>
<TD nowrap>INITIATE AN M3 POWER DOWN SEQUENCE</TD>
<TD>Write a one to this bit or use the set register to set this bit. Either operation will initiate a power down sequence that will power down the M3 and all of its memories that are to be powered off.  If the peripheral power domain is not forced to remain on then it will also be powered down in response to setting this bit. Shutting down the peripheral domain will power down the ADC.
<TR align="left">
<TD nowrap>30:30</TD>
<TD nowrap>FLASH_PWR_UP_CMPLT</TD>
<TD nowrap>RO</TD>
<TD nowrap>FLASH POWER UP STATUS</TD>
<TD>This read only bit indicates when the flash VREF has fully charged and the PDM signal has been removed.
<TR align="left">
<TD nowrap>29:29</TD>
<TD nowrap>WAKE_PIN_STATE</TD>
<TD nowrap>RO</TD>
<TD nowrap>STATUS OF THE WAKE PIN</TD>
<TD>This read only bit indicates the current value presented to the WAKE pin of the chip. The WAKE pin is one thing that can wake up the M3.
<TR align="left">
<TD nowrap>28:28</TD>
<TD nowrap>ADC_PWR_STATE</TD>
<TD nowrap>RO</TD>
<TD nowrap>STATUS OF ADC POWER STATE</TD>
<TD>This read only bit indicates the current power state of the ADC. In general, the power on of the ADC will appear to be instantaneous to an M3 program.  This bit provides a mechanism to interlock the firmware power up code.
<TR align="left">
<TD nowrap>27:27</TD>
<TD nowrap>DSP_PWR_STATE</TD>
<TD nowrap>RO</TD>
<TD nowrap>STATUS OF DSP POWER STATE</TD>
<TD>This read only bit indicates the current power state of the DSP. In general, the power on of the DSP will appear to be instantaneous to an M3 program.  This bit provides a mechanism to interlock the firmware power up code.
<TR align="left">
<TD nowrap>26:26</TD>
<TD nowrap>FLASH_V25</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>FLASH VOLTAGE 2.5V SWITCH</TD>
<TD>Set this bit to zero to turn off the flash FLASH 2.5V. Set this bit to one to turn on the FLASH 2.5V.
<TR align="left">
<TD nowrap>25:25</TD>
<TD nowrap>FLASH_PDM</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>FLASH VOLTAGE PDM CONTROL</TD>
<TD>Set this bit to zero to turn off the flash PDM signal.
<TR align="left">
<TD nowrap>24:24</TD>
<TD nowrap>FLASH_VREF</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>FLASH VOLTAGE REFERENCE</TD>
<TD>Set this bit to zero to turn off the voltage reference for the flash.
<TR align="left">
<TD nowrap>23:23</TD>
<TD nowrap>MEM_BUCK_FORCE</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>FORCE MEM BUCK TO REMAIN ON</TD>
<TD>Write a one to this bit to force the MEM BUCK converter to remain ON even when the M3 itself is powered OFF. The default behavior is to power down the MEM BUCK converter when the M3 powers off.
<TR align="left">
<TD nowrap>22:22</TD>
<TD nowrap>M3_BUCK_FORCE</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>FORCE M3 BUCK TO REMAIN ON</TD>
<TD>Write a one to this bit to force the M3 BUCK converter to remain ON even when the M3 itself is powered OFF. The default behavior is to power down the M3 BUCK converter when the M3 powers off.
<TR align="left">
<TD nowrap>21:21</TD>
<TD nowrap>M3_FLASH_FORCE</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>FORCE M3 FLASH POWER DOMAIN SWITCH</TD>
<TD>Write a one to this bit to force the M3 FLASH power domain to remain OFF even when the M3 itself is powered back up.
<TR align="left">
<TD nowrap>20:20</TD>
<TD nowrap>M3_SRAM4567_FORCE</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>FORCE M3 SRAM4567 POWER DOMAIN SWITCH</TD>
<TD>Write a one to this bit to force the M3 SRAM4567 power domain to remain ON even when the M3 itself is powered down.
<TR align="left">
<TD nowrap>19:19</TD>
<TD nowrap>M3_SRAM23_FORCE</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>FORCE M3 SRAM23 POWER DOMAIN SWITCH</TD>
<TD>Write a one to this bit to force the M3 SRAM23 power domain to remain ON even when the M3 itself is powered down.
<TR align="left">
<TD nowrap>18:18</TD>
<TD nowrap>M3_SRAM1_FORCE</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>FORCE M3 SRAM1 POWER DOMAIN SWITCH</TD>
<TD>Write a one to this bit to force the M3 SRAM1 power domain to remain ON even when the M3 itself is powered down.
<TR align="left">
<TD nowrap>17:17</TD>
<TD nowrap>M3_SRAM0_FORCE</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>FORCE M3 SRAM0 POWER DOMAIN SWITCH</TD>
<TD>Write a one to this bit to force the M3 SRAM0 power domain to remain ON even when the M3 itself is powered down.
<TR align="left">
<TD nowrap>16:16</TD>
<TD nowrap>PERIPH_FORCE</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>FORCE PERIPH POWER DOMAIN SWITCH</TD>
<TD>Write a one to this bit to force the PERIPH power domain to remain ON even when the M3, DSP, and ADC are powered down.
<TR align="left">
<TD nowrap>15:14</TD>
<TD nowrap>RSVD2</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>13:13</TD>
<TD nowrap>GPIO_FROZEN</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>GPIO LATCH IS FROZEN</TD>
<TD>Write a zero to this bit to force the GPIO latch in the peripheral block to flow through to the pins again. The GPIO data out enable out type signals are frozen in their final state before the M3 is reset, isolated and powered. This happens automatically on a power down of the M3. When the M3 comes back in a warm start the GPIO latches are frozen until firmware clears this bit. A cold start does not set hthis bit.
<TR align="left">
<TD nowrap>12:12</TD>
<TD nowrap>M3_FLASH</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>M3 FLASH POWER DOMAIN SWITCH</TD>
<TD>Write a zero to this bit to turn off power in the M3 FLASH power domain. This bit is set automatically at initial power provisioning.  Can be turned back on automatically in response to a wake up event. In addition, this bit can be forced to remain off even if the M3 is powered up from a wake event. This is useful for various power saving modes where the program is running as a warm start program in one or more of the SRAMs.
<TR align="left">
<TD nowrap>11:11</TD>
<TD nowrap>M3_SRAM4567</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>M3 SRAM4, SRAM5, SRAM6, SRAM7 POWER DOMAIN SWITCH</TD>
<TD>Write a zero to this bit to turn off power in the M3 SRAM4567 power domain. This bit is set automatically at initial power provisioning.  Can be turned back on automatically in response to a wake up event. In addition, this bit can be forced to remain on even if the M3 is powered down.
<TR align="left">
<TD nowrap>10:10</TD>
<TD nowrap>M3_SRAM23</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>M3 SRAM2, SRAM3 POWER DOMAIN SWITCH</TD>
<TD>Write a zero to this bit to turn off power in the M3 SRAM23 power domain. This bit is set automatically at initial power provisioning.  Can be turned back on automatically in response to a wake up event. In addition, this bit can be forced to remain on even if the M3 is powered down.
<TR align="left">
<TD nowrap>9:9</TD>
<TD nowrap>M3_SRAM1</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>M3 SRAM1 POWER DOMAIN SWITCH</TD>
<TD>Write a zero to this bit to turn off power in the M3 SRAM1 power domain. This bit is set automatically at initial power provisioning.  Can be turned back on automatically in response to a wake up event. In addition, this bit can be forced to remain on even if the M3 is powered down.
<TR align="left">
<TD nowrap>8:8</TD>
<TD nowrap>M3_SRAM0</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>M3 SRAM0 POWER DOMAIN SWITCH</TD>
<TD>Write a zero to this bit to turn off power in the M3 SRAM0 power domain. This bit is set automatically at initial power provisioning.  Can be turned back on automatically in response to a wake up event. In addition, this bit can be forced to remain on even if the M3 is powered down.
<TR align="left">
<TD nowrap>7:7</TD>
<TD nowrap>RSVD1</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>6:6</TD>
<TD nowrap>DSP_BUCK</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>DSP BUCK CONVERTER ENABLE</TD>
<TD>Set this bit to one to turn on the DSP BUCK. Set to zero to turn it off. NOTE the DSP BUCK converter does NOT automatically get turned on when the chip powers up the first time.
<TR align="left">
<TD nowrap>5:5</TD>
<TD nowrap>MEM_BUCK</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>MEM BUCK CONVERTER ENABLE</TD>
<TD>Write a zero to this bit to turn off the MEM BUCK converter.
<TR align="left">
<TD nowrap>4:4</TD>
<TD nowrap>M3_BUCK</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>M3 BUCK CONVERTER ENABLE</TD>
<TD>Write a zero to this bit to turn off the M3 BUCK converter.
<TR align="left">
<TD nowrap>3:3</TD>
<TD nowrap>ADC</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>ADC POWER DOMAIN SWITCH</TD>
<TD>Write a zero to this bit to turn off power in the ADC power domain.  This bit is NOT set automatically at initial power provisioning.  It can *NOT* be turned back on automatically in response to a wake up event. It can, however, be left on during an M3 power request. This would only make since if peripheral power were left on. Thus turning off the peripheral power will this area of the chip off as well.
<TR align="left">
<TD nowrap>2:2</TD>
<TD nowrap>DSP</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>DSP POWER DOMAIN SWITCH</TD>
<TD>Write a zero to this bit to turn off power in the DSP power domain. Writing zero will also power down the DSP SRAMs. This bit is NOT set automatically at initial power provisioning.  It can *NOT* be turned back on automatically in response to a wake up event. It is ALWAYS automatically turned off as part of every power down sequence. This bit also controls the power state of the DSP PMEM, XMEM, and YMEM.
<TR align="left">
<TD nowrap>1:1</TD>
<TD nowrap>M3</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>M3 POWER DOMAIN SWITCH</TD>
<TD>Write a zero to this bit to turn off power in the M3 power domain. Writing zero will also power down the M3 SRAMs, Flash, and Bootrom. This bit is set automatically at initial power provisioning.  Can be turned back on automatically in response to a wake up event.
<TR align="left">
<TD nowrap>0:0</TD>
<TD nowrap>PERIPH</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>PERIPHERAL POWER DOMAIN SWITCH</TD>
<TD>Write a zero to this bit to turn off power in the peripheral power domain. This bit is set automatically at initial power provisioning.  Can be turned back on automatically in response to a wake up event. Note that turning on this bit will also turn on the high frequency oscillator (HFO).
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>This register holds the bit fields that control the power state of the SOC. The default operation when the POWER_DOWN bit is written to one is to turn off ALL power domains except the always on domain.  The default behavior on power up is to power up everything but the ADC and the DSP. This can be overridden somewhat using the force bits in this register. The general should only modify the force bits and write to the power down bit. NOTE: the apparent reset or default state of these bits will be different depending on whether the M3 is starting up from a cold start or a warm start.</P>
<BR><HR>
<H2 id="PWR_SET"><A href="#index">
IO_RTC_PWR_SET</A></H2>
<P><FONT size="+1"><B>POWER CONTROL SET REGISTER</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_PWR_SET ADDRESS:</B></TD>
<TD><CODE>0x50010064</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#ffffff" colspan="1">POWER_DOWN<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#e0e0e0" colspan="4">RSVD3<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">FLASH_V25<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">FLASH_PDM<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">FLASH_VREF<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">MEM_BUCK_FORCE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">M3_BUCK_FORCE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">M3_FLASH_FORCE<BR><TT>0x1</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">M3_SRAM4567_FORCE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">M3_SRAM23_FORCE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">M3_SRAM1_FORCE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">M3_SRAM0_FORCE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">PERIPH_FORCE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#e0e0e0" colspan="2">RSVD2<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">GPIO_FROZEN<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">M3_FLASH<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">M3_SRAM4567<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">M3_SRAM23<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">M3_SRAM1<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">M3_SRAM0<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#e0e0e0" colspan="1">RSVD1<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">DSP_BUCK<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">MEM_BUCK<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">M3_BUCK<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">ADC<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">DSP<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">M3<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">PERIPH<BR><TT>0x0</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:31</TD>
<TD nowrap>POWER_DOWN</TD>
<TD nowrap>WO</TD>
<TD nowrap>INITIATE A POWER DOWN SEQUENCE</TD>
<TD>Writing a one to this bit will initiate a power down sequence.
<TR align="left">
<TD nowrap>30:27</TD>
<TD nowrap>RSVD3</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>26:26</TD>
<TD nowrap>FLASH_V25</TD>
<TD nowrap>WO</TD>
<TD nowrap>FLASH VOLTAGE 2.5V SWITCH</TD>
<TD>Writing a one to this bit will set the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>25:25</TD>
<TD nowrap>FLASH_PDM</TD>
<TD nowrap>WO</TD>
<TD nowrap>FLASH VOLTAGE PDM CONTROL</TD>
<TD>Writing a one to this bit will set the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>24:24</TD>
<TD nowrap>FLASH_VREF</TD>
<TD nowrap>WO</TD>
<TD nowrap>FLASH VOLTAGE REFERENCE</TD>
<TD>Set this bit to zero to turn of the voltage reference for the flash.
<TR align="left">
<TD nowrap>23:23</TD>
<TD nowrap>MEM_BUCK_FORCE</TD>
<TD nowrap>WO</TD>
<TD nowrap>FORCE MEM BUCK TO REMAIN ON</TD>
<TD>Writing a one to this bit will set the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>22:22</TD>
<TD nowrap>M3_BUCK_FORCE</TD>
<TD nowrap>WO</TD>
<TD nowrap>FORCE M3 BUCK TO REMAIN ON</TD>
<TD>Writing a one to this bit will set the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>21:21</TD>
<TD nowrap>M3_FLASH_FORCE</TD>
<TD nowrap>WO</TD>
<TD nowrap>FORCE M3 FLASH POWER DOMAIN SWITCH</TD>
<TD>Writing a one to this bit will set the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>20:20</TD>
<TD nowrap>M3_SRAM4567_FORCE</TD>
<TD nowrap>WO</TD>
<TD nowrap>FORCE M3 SRAM4567 POWER DOMAIN SWITCH</TD>
<TD>Writing a one to this bit will set the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>19:19</TD>
<TD nowrap>M3_SRAM23_FORCE</TD>
<TD nowrap>WO</TD>
<TD nowrap>FORCE M3 SRAM23 POWER DOMAIN SWITCH</TD>
<TD>Writing a one to this bit will set the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>18:18</TD>
<TD nowrap>M3_SRAM1_FORCE</TD>
<TD nowrap>WO</TD>
<TD nowrap>FORCE M3 SRAM1 POWER DOMAIN SWITCH</TD>
<TD>Writing a one to this bit will set the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>17:17</TD>
<TD nowrap>M3_SRAM0_FORCE</TD>
<TD nowrap>WO</TD>
<TD nowrap>FORCE M3 SRAM0 POWER DOMAIN SWITCH</TD>
<TD>Writing a one to this bit will set the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>16:16</TD>
<TD nowrap>PERIPH_FORCE</TD>
<TD nowrap>WO</TD>
<TD nowrap>FORCE PERIPH POWER DOMAIN SWITCH</TD>
<TD>Writing a one to this bit will set the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>15:14</TD>
<TD nowrap>RSVD2</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>13:13</TD>
<TD nowrap>GPIO_FROZEN</TD>
<TD nowrap>WO</TD>
<TD nowrap>GPIO LATCH IS FROZEN</TD>
<TD>Writing a one to this bit will set the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>12:12</TD>
<TD nowrap>M3_FLASH</TD>
<TD nowrap>WO</TD>
<TD nowrap>M3 FLASH POWER DOMAIN SWITCH</TD>
<TD>Writing a one to this bit will set the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>11:11</TD>
<TD nowrap>M3_SRAM4567</TD>
<TD nowrap>WO</TD>
<TD nowrap>M3 SRAM4, SRAM5, SRAM6, SRAM7 POWER DOMAIN SWITCH</TD>
<TD>Writing a one to this bit will set the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>10:10</TD>
<TD nowrap>M3_SRAM23</TD>
<TD nowrap>WO</TD>
<TD nowrap>M3 SRAM1, SRAM2, SRAM3 POWER DOMAIN SWITCH</TD>
<TD>Writing a one to this bit will set the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>9:9</TD>
<TD nowrap>M3_SRAM1</TD>
<TD nowrap>WO</TD>
<TD nowrap>M3 SRAM1 POWER DOMAIN SWITCH</TD>
<TD>Writing a one to this bit will set the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>8:8</TD>
<TD nowrap>M3_SRAM0</TD>
<TD nowrap>WO</TD>
<TD nowrap>M3 SRAM0 POWER DOMAIN SWITCH</TD>
<TD>Writing a one to this bit will set the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>7:7</TD>
<TD nowrap>RSVD1</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>6:6</TD>
<TD nowrap>DSP_BUCK</TD>
<TD nowrap>WO</TD>
<TD nowrap>DSP BUCK CONVERTER ENABLE</TD>
<TD>Write a one to this bit will set the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>5:5</TD>
<TD nowrap>MEM_BUCK</TD>
<TD nowrap>WO</TD>
<TD nowrap>MEM BUCK CONVERTER ENABLE</TD>
<TD>Write a one to this bit will set the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>4:4</TD>
<TD nowrap>M3_BUCK</TD>
<TD nowrap>WO</TD>
<TD nowrap>M3 BUCK CONVERTER ENABLE</TD>
<TD>Write a one to this bit will set the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>3:3</TD>
<TD nowrap>ADC</TD>
<TD nowrap>WO</TD>
<TD nowrap>ADC POWER DOMAIN SWITCH</TD>
<TD>Writing a one to this bit will set the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>2:2</TD>
<TD nowrap>DSP</TD>
<TD nowrap>WO</TD>
<TD nowrap>DSP POWER DOMAIN SWITCH</TD>
<TD>Writing a one to this bit will set the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>1:1</TD>
<TD nowrap>M3</TD>
<TD nowrap>WO</TD>
<TD nowrap>M3 POWER DOMAIN SWITCH</TD>
<TD>Writing a one to this bit will set the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>0:0</TD>
<TD nowrap>PERIPH</TD>
<TD nowrap>WO</TD>
<TD nowrap>PERIPHERAL POWER DOMAIN SWITCH</TD>
<TD>Writing a one to this bit will set the corresponding bit in the PWR register.
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>The bits in this register correspond to bits in the PWR register. Writing a one to one of the bits in this register cause the correponding bit in the PWR register to be set. These bits always read back as zero.</P>
<BR><HR>
<H2 id="PWR_CLEAR"><A href="#index">
IO_RTC_PWR_CLEAR</A></H2>
<P><FONT size="+1"><B>POWER CONTROL CLEAR REGISTER</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_PWR_CLEAR ADDRESS:</B></TD>
<TD><CODE>0x50010068</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#ffffff" colspan="1">POWER_DOWN<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#e0e0e0" colspan="4">RSVD3<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">FLASH_V25<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">FLASH_PDM<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">FLASH_VREF<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">MEM_BUCK_FORCE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">M3_BUCK_FORCE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">M3_FLASH_FORCE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">M3_SRAM4567_FORCE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">M3_SRAM23_FORCE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">M3_SRAM1_FORCE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">M3_SRAM0_FORCE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">PERIPH_FORCE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#e0e0e0" colspan="2">RSVD2<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">GPIO_FROZEN<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">M3_FLASH<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">M3_SRAM4567<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">M3_SRAM23<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">M3_SRAM1<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">M3_SRAM0<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#e0e0e0" colspan="1">RSVD1<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">DSP_BUCK<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">MEM_BUCK<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">M3_BUCK<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">ADC<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">DSP<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">M3<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">PERIPH<BR><TT>0x0</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:31</TD>
<TD nowrap>POWER_DOWN</TD>
<TD nowrap>WO</TD>
<TD nowrap>INITIATE A POWER DOWN SEQUENCE</TD>
<TD>Writing a one to this bit will have no effect.
<TR align="left">
<TD nowrap>30:27</TD>
<TD nowrap>RSVD3</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>26:26</TD>
<TD nowrap>FLASH_V25</TD>
<TD nowrap>WO</TD>
<TD nowrap>FLASH VOLTAGE 2.5V SWITCH</TD>
<TD>Writing a one to this bit will clear the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>25:25</TD>
<TD nowrap>FLASH_PDM</TD>
<TD nowrap>WO</TD>
<TD nowrap>FLASH VOLTAGE PDM CONTROL</TD>
<TD>Writing a one to this bit will clear the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>24:24</TD>
<TD nowrap>FLASH_VREF</TD>
<TD nowrap>WO</TD>
<TD nowrap>FLASH VOLTAGE REFERENCE</TD>
<TD>Set this bit to zero to turn of the voltage reference for the flash.
<TR align="left">
<TD nowrap>23:23</TD>
<TD nowrap>MEM_BUCK_FORCE</TD>
<TD nowrap>WO</TD>
<TD nowrap>FORCE MEM BUCK TO REMAIN ON</TD>
<TD>Writing a one to this bit will clear the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>22:22</TD>
<TD nowrap>M3_BUCK_FORCE</TD>
<TD nowrap>WO</TD>
<TD nowrap>FORCE M3 BUCK TO REMAIN ON</TD>
<TD>Writing a one to this bit will clear the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>21:21</TD>
<TD nowrap>M3_FLASH_FORCE</TD>
<TD nowrap>WO</TD>
<TD nowrap>FORCE M3 FLASH POWER DOMAIN SWITCH</TD>
<TD>Writing a one to this bit will clear the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>20:20</TD>
<TD nowrap>M3_SRAM4567_FORCE</TD>
<TD nowrap>WO</TD>
<TD nowrap>FORCE M3 SRAM4567 POWER DOMAIN SWITCH</TD>
<TD>Writing a one to this bit will clear the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>19:19</TD>
<TD nowrap>M3_SRAM23_FORCE</TD>
<TD nowrap>WO</TD>
<TD nowrap>FORCE M3 SRAM23 POWER DOMAIN SWITCH</TD>
<TD>Writing a one to this bit will clear the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>18:18</TD>
<TD nowrap>M3_SRAM1_FORCE</TD>
<TD nowrap>WO</TD>
<TD nowrap>FORCE M3 SRAM1 POWER DOMAIN SWITCH</TD>
<TD>Writing a one to this bit will clear the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>17:17</TD>
<TD nowrap>M3_SRAM0_FORCE</TD>
<TD nowrap>WO</TD>
<TD nowrap>FORCE M3 SRAM0 POWER DOMAIN SWITCH</TD>
<TD>Writing a one to this bit will clear the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>16:16</TD>
<TD nowrap>PERIPH_FORCE</TD>
<TD nowrap>WO</TD>
<TD nowrap>FORCE PERIPH POWER DOMAIN SWITCH</TD>
<TD>Writing a one to this bit will clear the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>15:14</TD>
<TD nowrap>RSVD2</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>13:13</TD>
<TD nowrap>GPIO_FROZEN</TD>
<TD nowrap>WO</TD>
<TD nowrap>GPIO LATCH IS FROZEN</TD>
<TD>Writing a one to this bit will clear the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>12:12</TD>
<TD nowrap>M3_FLASH</TD>
<TD nowrap>WO</TD>
<TD nowrap>M3 FLASH POWER DOMAIN SWITCH</TD>
<TD>Writing a one to this bit will clear the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>11:11</TD>
<TD nowrap>M3_SRAM4567</TD>
<TD nowrap>WO</TD>
<TD nowrap>SRAM4, SRAM5, SRAM6, SRAM7 POWER DOMAIN SWITCH</TD>
<TD>Writing a one to this bit will clear the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>10:10</TD>
<TD nowrap>M3_SRAM23</TD>
<TD nowrap>WO</TD>
<TD nowrap>SRAM2, SRAM3 POWER DOMAIN SWITCH</TD>
<TD>Writing a one to this bit will clear the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>9:9</TD>
<TD nowrap>M3_SRAM1</TD>
<TD nowrap>WO</TD>
<TD nowrap>M3 SRAM1 POWER DOMAIN SWITCH</TD>
<TD>Writing a one to this bit will clear the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>8:8</TD>
<TD nowrap>M3_SRAM0</TD>
<TD nowrap>WO</TD>
<TD nowrap>M3 SRAM0 POWER DOMAIN SWITCH</TD>
<TD>Writing a one to this bit will clear the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>7:7</TD>
<TD nowrap>RSVD1</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>6:6</TD>
<TD nowrap>DSP_BUCK</TD>
<TD nowrap>WO</TD>
<TD nowrap>DSP BUCK CONVERTER ENABLE</TD>
<TD>Write a one to this bit will clear the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>5:5</TD>
<TD nowrap>MEM_BUCK</TD>
<TD nowrap>WO</TD>
<TD nowrap>MEM BUCK CONVERTER ENABLE</TD>
<TD>Write a one to this bit will clear the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>4:4</TD>
<TD nowrap>M3_BUCK</TD>
<TD nowrap>WO</TD>
<TD nowrap>M3 BUCK CONVERTER ENABLE</TD>
<TD>Write a one to this bit will clear the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>3:3</TD>
<TD nowrap>ADC</TD>
<TD nowrap>WO</TD>
<TD nowrap>ADC POWER DOMAIN SWITCH</TD>
<TD>Writing a one to this bit will clear the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>2:2</TD>
<TD nowrap>DSP</TD>
<TD nowrap>WO</TD>
<TD nowrap>DSP POWER DOMAIN SWITCH</TD>
<TD>Writing a one to this bit will clear the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>1:1</TD>
<TD nowrap>M3</TD>
<TD nowrap>WO</TD>
<TD nowrap>M3 POWER DOMAIN SWITCH</TD>
<TD>Writing a one to this bit will clear the corresponding bit in the PWR register.
<TR align="left">
<TD nowrap>0:0</TD>
<TD nowrap>PERIPH</TD>
<TD nowrap>WO</TD>
<TD nowrap>PERIPHERAL POWER DOMAIN SWITCH</TD>
<TD>Writing a one to this bit will clear the corresponding bit in the PWR register.
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>The bits in this register correspond to bits in the PWR register. Writing a one to one of the bits in this register cause the correponding bit in the PWR register to be cleared. These bits always read back as zero.</P>
<BR><HR>
<H2 id="OSC_CSR"><A href="#index">
IO_RTC_OSC_CSR</A></H2>
<P><FONT size="+1"><B>OSCILLATOR CONTROL REGISTER</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_OSC_CSR ADDRESS:</B></TD>
<TD><CODE>0x5001006c</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#ffffff" colspan="1">HFO_CLK_GATE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#e0e0e0" colspan="2">RSVD2<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">BUCK_HF_CLK_SRC<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="2">DSP_OSC_DLY_SEL<BR><TT>0x3</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="2">M3_OSC_DLY_SEL<BR><TT>0x3</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="8">HFO_TRIM<BR><TT>0xff</TT>
</TD>
<TD align="center" bgcolor="#e0e0e0" colspan="3">RSVD1<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">LFO_3NA_DIS<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">LFO_36NA_DIS<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="3">LFO_36na_TRIM<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="8">LFO_TRIM<BR><TT>0x80</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:31</TD>
<TD nowrap>HFO_CLK_GATE</TD>
<TD nowrap>RW</TD>
<TD nowrap>HFO CLOCK GATE</TD>
<TD>Writing a one to this bit will stop the HFO clock while it's trim values are changed. Firmware has to stop this clock when changing the value in the HFO_TRIM and HFO_TRIM_DIV bit fields.
<TR align="left">
<TD nowrap>30:29</TD>
<TD nowrap>RSVD2</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>28:28</TD>
<TD nowrap>BUCK_HF_CLK_SRC</TD>
<TD nowrap>RW</TD>
<TD nowrap>BUCK HIGH FREQUENCY SOURCE SELECT</TD>
<TD>Set to one to select the 2MHz integrated crystal oscillator as the source for all of the buck converters external reference clock. Set to zero to use the on chip HFO as the source.
<TR align="left">
<TD nowrap>27:26</TD>
<TD nowrap>DSP_OSC_DLY_SEL</TD>
<TD nowrap>RW</TD>
<TD nowrap>DSP Oscillator Delay Select</TD>
<TD>These settings will be defined after characterization.
<TR align="left">
<TD nowrap>25:24</TD>
<TD nowrap>M3_OSC_DLY_SEL</TD>
<TD nowrap>RW</TD>
<TD nowrap>M3 Oscillator Delay Select</TD>
<TD>These settings will be defined after characterization.
<TR align="left">
<TD nowrap>23:16</TD>
<TD nowrap>HFO_TRIM</TD>
<TD nowrap>RW</TD>
<TD nowrap>HFO OSCILLATOR TRIM.</TD>
<TD>These settings will be defined after characterization.
<TR align="left">
<TD nowrap>15:13</TD>
<TD nowrap>RSVD1</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>12:12</TD>
<TD nowrap>LFO_3NA_DIS</TD>
<TD nowrap>RW</TD>
<TD nowrap>LFO XTAL OSCILLATOR 3nA DISABLE.</TD>
<TD>Set to one to disable voltage mode operation reference current.
<TR align="left">
<TD nowrap>11:11</TD>
<TD nowrap>LFO_36NA_DIS</TD>
<TD nowrap>RW</TD>
<TD nowrap>LFO XTAL OSCILLATOR 36nA DISABLE.</TD>
<TD>Set to one to disable current mode operation reference current.
<TR align="left">
<TD nowrap>10:8</TD>
<TD nowrap>LFO_36na_TRIM</TD>
<TD nowrap>RW</TD>
<TD nowrap>LFO XTAL OSCILLATOR 36nA TRIM.</TD>
<TD>Set the current mode reference trim value into this bit field. These settings will be defined after characterization.
<TR align="left">
<TD nowrap>7:0</TD>
<TD nowrap>LFO_TRIM</TD>
<TD nowrap>RW</TD>
<TD nowrap>LFO XTAL OSCILLATOR TRIM.</TD>
<TD>Output frequency trim settings. These settings will be defined after characterization.
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>Control bits headed either for the 8MHz high frequency osciallator (HFO) or to the 32KHz low frequency oscillator (LFO).</P>
<BR><HR>
<H2 id="PMIC_AO_CSR"><A href="#index">
IO_RTC_PMIC_AO_CSR</A></H2>
<P><FONT size="+1"><B>PMIC AO CONTROL REGISTER</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_PMIC_AO_CSR ADDRESS:</B></TD>
<TD><CODE>0x50010070</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#e0e0e0" colspan="2">RSVD2<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">WRITE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">SEL_OSC<BR><TT>0x1</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="3">SEL_OSC_DIV<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#e0e0e0" colspan="1">RSVD1<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">BYPASS_PU<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">SEL_REF_EXT<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="3">OP_MODE<BR><TT>0x1</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="3">VREG_TRIM<BR><TT>0x2</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="8">SEL_PD<BR><TT>0x42</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="8">PU_BYPASS<BR><TT>0x1e</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:30</TD>
<TD nowrap>RSVD2</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>29:29</TD>
<TD nowrap>WRITE</TD>
<TD nowrap>WO</TD>
<TD nowrap>WRITE TO PMIC</TD>
<TD>Set this write only bit to one to issue a LOAD_L pulse to the PMIC causing it to capture the values from this register.
<TR align="left">
<TD nowrap>28:28</TD>
<TD nowrap>SEL_OSC</TD>
<TD nowrap>RW</TD>
<TD nowrap>SELECT WHICH CLOCK SOURCE (HFO or 32KHz).</TD>
<TD>Selects which clock source to use for the divider in the peripheral which can drive the AO PMIC.
<BR>HFO = 0 Select the 8MHz HFO clock source into the divider.
<BR>XTAL = 1 Select the 32KHz clock source into the divider.
<TR align="left">
<TD nowrap>27:25</TD>
<TD nowrap>SEL_OSC_DIV</TD>
<TD nowrap>RW</TD>
<TD nowrap>SELECT WHICH HFO DIVIDER TO USE</TD>
<TD>Selects which HFO divider to use as an external clock for this PMIC.
<BR>1BY1 = 0 Divider is set for 1 divided by 1, i.e. 2MHz or 32768Hz.
<BR>1BY2 = 1 Divider is set for 1 divided by 2, i.e. 1MHz or 16384Hz.
<BR>1BY4 = 2 Divider is set for 1 divided by 4, i.e. 500KHz or 8192Hz.
<BR>1BY8 = 3 Divider is set for 1 divided by 8, i.e. 250KHz or 4096Hz.
<BR>1BY16 = 4 Divider is set for 1 divided by 16, i.e. 125KHz or 2048Hz.
<BR>1BY32 = 5 Divider is set for 1 divided by 32, i.e. 62500Hz or 1024Hz.
<BR>1BY64 = 6 Divider is set for 1 divided by 64, i.e. 512Hz (only 32KHz source).
<BR>1BY128 = 7 Divider is set for 1 divided by 128, i.e. 256Hz (only 32KHz source).
<TR align="left">
<TD nowrap>24:24</TD>
<TD nowrap>RSVD1</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>23:23</TD>
<TD nowrap>BYPASS_PU</TD>
<TD nowrap>RW</TD>
<TD nowrap>BYPASS AUTOMATIC PULL UP VALUE</TD>
<TD>Inside the PMIC, this value bypasses the normal internal generation of the pull up pulse width. It substitutes the PU_BYPASS value instead.
<BR>NORMAL = 0 Select normal operation in which PMIC controls pull down pulse width.
<BR>OVERRIDE = 1 OVERRIDE automatic control function in PMIC.
<TR align="left">
<TD nowrap>22:22</TD>
<TD nowrap>SEL_REF_EXT</TD>
<TD nowrap>RW</TD>
<TD nowrap>SELECT REFERENCE CLOCK</TD>
<TD>Inside the PMIC, this value selects between REF_CLK_PWR_UP and REF_CLK input to the PMIC.
<BR>INITIAL = 0 Select initial operation by using the internal reference clock.
<BR>NORMAL = 1 Select the reference clock that is supplied to the PMIC block.
<TR align="left">
<TD nowrap>21:19</TD>
<TD nowrap>OP_MODE</TD>
<TD nowrap>RW</TD>
<TD nowrap>OPERATING MODE</TD>
<TD>Inside the PMIC, this value selects between frequency and voltage mode and selects the target voltage in volatage mode.
<BR>VOLTAGE_600MV = 0 Select voltage mode and target 600mV.
<BR>VOLTAGE_700MV = 1 Select voltage mode and target 700mV.
<BR>VOLTAGE_900MV = 2 Select voltage mode and target 900mV.
<BR>VOLTAGE_1200MV = 3 Select voltage mode and target 1200mV.
<BR>FREQUENCY_MODE = 4 Select frequency mode with VMIN and VMAX protection.
<BR>FREQ_VMIN = 5 Select frequency mode with VMIN protection.
<BR>FREQ_VMAX = 6 Select frequency mode with maximum voltage limiting to XXXmV.
<BR>FREQUENCY_NO_VLIM = 7 Select frequency mode with NO minimum or maximum voltage limiting.
<TR align="left">
<TD nowrap>18:16</TD>
<TD nowrap>VREG_TRIM</TD>
<TD nowrap>RW</TD>
<TD nowrap>REGULATOR TRIM</TD>
<TD>Inside the PMIC, this value selects a trim offset for the target voltage.
<TR align="left">
<TD nowrap>15:8</TD>
<TD nowrap>SEL_PD</TD>
<TD nowrap>RW</TD>
<TD nowrap>DRIVER PULL UP PULSE WIDTH</TD>
<TD>Inside the PMIC, this value controls the switch drivers pull DOWN pulse width. It defaults to the 900mV setting at reset. This value is ignored during initialization.
<TR align="left">
<TD nowrap>7:0</TD>
<TD nowrap>PU_BYPASS</TD>
<TD nowrap>RW</TD>
<TD nowrap>DRIVER PULL UP PULSE WIDTH BYPASS</TD>
<TD>Inside the PMIC, this value controls the switch drivers pull UP pulse width. This value is only used in the driver if BYPASS_PU is also a one.
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>Control bits headed for the PMIC. These are all captured in the PMIC by LOAD_L. The LOAD_L pulse is automatically generated whenever this register is written, provided that the WRITE bit is written as a one on the same cycle.</P>
<BR><HR>
<H2 id="PMIC_MEM_CSR"><A href="#index">
IO_RTC_PMIC_MEM_CSR</A></H2>
<P><FONT size="+1"><B>PMIC_MEM CONTROL REGISTER</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_PMIC_MEM_CSR ADDRESS:</B></TD>
<TD><CODE>0x50010074</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#c0c0c0" colspan="1">READY<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#c0c0c0" colspan="1">STABLE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">WRITE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">SEL_OSC<BR><TT>0x1</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="3">SEL_OSC_DIV<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#e0e0e0" colspan="1">RSVD1<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">BYPASS_PU<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">SEL_REF_EXT<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="3">OP_MODE<BR><TT>0x2</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="3">VREG_TRIM<BR><TT>0x2</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="8">SEL_PD<BR><TT>0x50</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="8">PU_BYPASS<BR><TT>0x1e</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:31</TD>
<TD nowrap>READY</TD>
<TD nowrap>RO</TD>
<TD nowrap>READY REPORTED FROM PMIC</TD>
<TD>The PMIC reports not ready, 0x0, whenever it is powered up. Firmware can use this bit to know when the target voltage has been reached.
<TR align="left">
<TD nowrap>30:30</TD>
<TD nowrap>STABLE</TD>
<TD nowrap>RO</TD>
<TD nowrap>STABLE REPORTED FROM PMIC</TD>
<TD>This bit reports not stable, 0x0, whenever its target voltage is changed by firmware. Firmware can use this bit to know when the target voltage has been reached.
<TR align="left">
<TD nowrap>29:29</TD>
<TD nowrap>WRITE</TD>
<TD nowrap>WO</TD>
<TD nowrap>WRITE TO PMIC</TD>
<TD>Set this write only bit to one to issue a LOAD_L pulse to the PMIC causing it to capture the values from this register.
<TR align="left">
<TD nowrap>28:28</TD>
<TD nowrap>SEL_OSC</TD>
<TD nowrap>RW</TD>
<TD nowrap>SELECT WHICH CLOCK SOURCE (HFO or 32KHz).</TD>
<TD>Selects which clock source to use for the divider in the peripheral which can drive the MEM PMIC.
<BR>HFO = 0 Select the 8MHz HFO clock source into the divider.
<BR>XTAL = 1 Select the 32KHz clock source into the divider.
<TR align="left">
<TD nowrap>27:25</TD>
<TD nowrap>SEL_OSC_DIV</TD>
<TD nowrap>RW</TD>
<TD nowrap>SELECT WHICH HFO DIVIDER TO USE</TD>
<TD>Selects which HFO divider to use as an external clock for this PMIC.
<BR>1BY1 = 0 Divider is set for 1 divided by 1, i.e. 2MHz or 32768Hz.
<BR>1BY2 = 1 Divider is set for 1 divided by 2, i.e. 1MHz or 16384Hz.
<BR>1BY4 = 2 Divider is set for 1 divided by 4, i.e. 500KHz or 8192Hz.
<BR>1BY8 = 3 Divider is set for 1 divided by 8, i.e. 250KHz or 4096Hz.
<BR>1BY16 = 4 Divider is set for 1 divided by 16, i.e. 125KHz or 2048Hz.
<BR>1BY32 = 5 Divider is set for 1 divided by 32, i.e. 62500Hz or 1024Hz.
<BR>1BY64 = 6 Divider is set for 1 divided by 64, i.e. 512Hz (only 32KHz source).
<BR>1BY128 = 7 Divider is set for 1 divided by 128, i.e. 256Hz (only 32KHz source).
<TR align="left">
<TD nowrap>24:24</TD>
<TD nowrap>RSVD1</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>23:23</TD>
<TD nowrap>BYPASS_PU</TD>
<TD nowrap>RW</TD>
<TD nowrap>BYPASS AUTOMATIC PULL UP VALUE</TD>
<TD>Inside the PMIC, this value bypasses the normal internal generation of the pull down pulse width. It substitutes the PU_BYPASS value instead.
<BR>NORMAL = 0 Select normal operation in which PMIC controls pull up pulse width.
<BR>OVERRIDE = 1 OVERRIDE automatic control function in PMIC.
<TR align="left">
<TD nowrap>22:22</TD>
<TD nowrap>SEL_REF_EXT</TD>
<TD nowrap>RW</TD>
<TD nowrap>SELECT REFERENCE CLOCK</TD>
<TD>Inside the PMIC, this value selects between REF_CLK_PWR_UP and REF_CLK input to the PMIC.
<BR>INITIAL = 0 Select initial operation by using the internal reference clock.
<BR>NORMAL = 1 Select the reference clock that is supplied to the PMIC block.
<TR align="left">
<TD nowrap>21:19</TD>
<TD nowrap>OP_MODE</TD>
<TD nowrap>RW</TD>
<TD nowrap>OPERATING MODE</TD>
<TD>Inside the PMIC, this value selects between frequency and voltage mode and selects the target voltage in volatage mode.
<BR>VOLTAGE_600MV = 0 Select voltage mode and target 600mV.
<BR>VOLTAGE_700MV = 1 Select voltage mode and target 700mV.
<BR>VOLTAGE_900MV = 2 Select voltage mode and target 900mV.
<BR>VOLTAGE_1200MV = 3 Select voltage mode and target 1200mV.
<BR>FREQUENCY_MODE = 4 Select frequency mode with VMIN and VMAX protection.
<BR>FREQ_VMIN = 5 Select frequency mode with VMIN protection.
<BR>FREQ_VMAX = 6 Select frequency mode with maximum voltage limiting to XXXmV.
<BR>FREQUENCY_NO_VLIM = 7 Select frequency mode with NO minimum or maximum voltage limiting.
<TR align="left">
<TD nowrap>18:16</TD>
<TD nowrap>VREG_TRIM</TD>
<TD nowrap>RW</TD>
<TD nowrap>REGULATOR TRIM</TD>
<TD>Inside the PMIC, this value selects a trim offset for the target voltage.
<TR align="left">
<TD nowrap>15:8</TD>
<TD nowrap>SEL_PD</TD>
<TD nowrap>RW</TD>
<TD nowrap>DRIVER PULL UP PULSE WIDTH</TD>
<TD>Inside the PMIC, this value controls the switch drivers PULL UP pulse width. It defaults to the 900mV setting at reset. This value is ignored during initialization.
<TR align="left">
<TD nowrap>7:0</TD>
<TD nowrap>PU_BYPASS</TD>
<TD nowrap>RW</TD>
<TD nowrap>DRIVER PULL UP PULSE WIDTH BYPASS</TD>
<TD>Inside the PMIC, this value controls the switch drivers pull UP pulse width. This value is only used in the driver if BYPASS_PU is also a one.
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>Control bits headed for the PMIC. These are all captured in the PMIC by LOAD_L. The LOAD_L pulse is automatically generated whenever this register is written, provided that the WRITE bit is written as a one on the same cycle.</P>
<BR><HR>
<H2 id="PMIC_M3_CSR"><A href="#index">
IO_RTC_PMIC_M3_CSR</A></H2>
<P><FONT size="+1"><B>PMIC_M3 CONTROL REGISTER</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_PMIC_M3_CSR ADDRESS:</B></TD>
<TD><CODE>0x50010078</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#c0c0c0" colspan="1">READY<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#c0c0c0" colspan="1">STABLE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">WRITE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">SEL_OSC<BR><TT>0x1</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="3">SEL_OSC_DIV<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">SEL_VREG<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">FMODE_RST_L_N<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">SEL_REF_EXT<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="3">OP_MODE<BR><TT>0x1</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="3">VREG_TRIM<BR><TT>0x2</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="8">SEL_PD<BR><TT>0x42</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="8">PU_BYPASS<BR><TT>0x1e</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:31</TD>
<TD nowrap>READY</TD>
<TD nowrap>RO</TD>
<TD nowrap>READY REPORTED FROM PMIC</TD>
<TD>The PMIC reports not ready, 0x0, whenever it is powered up. Firmware can use this bit to know when the target voltage has been reached.
<TR align="left">
<TD nowrap>30:30</TD>
<TD nowrap>STABLE</TD>
<TD nowrap>RO</TD>
<TD nowrap>STABLE REPORTED FROM PMIC</TD>
<TD>This bit reports not stable, 0x0, whenever its target voltage is changed by firmware. Firmware can use this bit to know when the target voltage has been reached.
<TR align="left">
<TD nowrap>29:29</TD>
<TD nowrap>WRITE</TD>
<TD nowrap>WO</TD>
<TD nowrap>WRITE TO PMIC</TD>
<TD>Set this write only bit to one to issue a LOAD_L pulse to the PMIC causing it to capture the values from this register.
<TR align="left">
<TD nowrap>28:28</TD>
<TD nowrap>SEL_OSC</TD>
<TD nowrap>RW</TD>
<TD nowrap>SELECT WHICH CLOCK SOURCE (HFO or 32KHz).</TD>
<TD>Selects which clock source to use for the divider in the peripheral which can drive the M3 PMIC.
<BR>HFO = 0 Select the 8MHz HFO clock source into the divider.
<BR>XTAL = 1 Select the 32KHz clock source into the divider.
<TR align="left">
<TD nowrap>27:25</TD>
<TD nowrap>SEL_OSC_DIV</TD>
<TD nowrap>RW</TD>
<TD nowrap>SELECT WHICH HFO DIVIDER TO USE</TD>
<TD>Selects which HFO divider to use as an external clock for this PMIC.
<BR>1BY1 = 0 Divider is set for 1 divided by 1, i.e. 2MHz or 32768Hz.
<BR>1BY2 = 1 Divider is set for 1 divided by 2, i.e. 1MHz or 16384Hz.
<BR>1BY4 = 2 Divider is set for 1 divided by 4, i.e. 500KHz or 8192Hz.
<BR>1BY8 = 3 Divider is set for 1 divided by 8, i.e. 250KHz or 4096Hz.
<BR>1BY16 = 4 Divider is set for 1 divided by 16, i.e. 125KHz or 2048Hz.
<BR>1BY32 = 5 Divider is set for 1 divided by 32, i.e. 62500Hz or 1024Hz.
<BR>1BY64 = 6 Divider is set for 1 divided by 64, i.e. 512Hz (only 32KHz source).
<BR>1BY128 = 7 Divider is set for 1 divided by 128, i.e. 256Hz (only 32KHz source).
<TR align="left">
<TD nowrap>24:24</TD>
<TD nowrap>SEL_VREG</TD>
<TD nowrap>RW</TD>
<TD nowrap>SELECT VREG RAIL TO MONITOR</TD>
<TD>Set to one to monitor VDD_M3 after the power switch. Set to zero to monitor before the switch.
<BR>REG_OUTPUT = 0 Select monitoring the regulator output.
<BR>POST_SWITCH = 1 Select monitoring the voltage after it is switched.
<TR align="left">
<TD nowrap>23:23</TD>
<TD nowrap>FMODE_RST_L_N</TD>
<TD nowrap>RW</TD>
<TD nowrap>FREQUENCY MODE RESET INVERTED</TD>
<TD>Inside the PMIC, this value forces a reset to the frequency mode counters. This should be 0 before switching to frequency mode. After the switch this should be set to one.
<BR>RESET = 1 Select RESET operation for the frequency mode of operation.
<BR>NORMAL = 0 Select NORMAL operation for the frequency mode of operation.
<TR align="left">
<TD nowrap>22:22</TD>
<TD nowrap>SEL_REF_EXT</TD>
<TD nowrap>RW</TD>
<TD nowrap>SELECT REFERENCE CLOCK</TD>
<TD>Inside the PMIC, this value selects between REF_CLK_PWR_UP and REF_CLK input to the PMIC.
<BR>INITIAL = 0 Select initial operation by using the internal reference clock.
<BR>NORMAL = 1 Select the reference clock that is supplied to the PMIC block.
<TR align="left">
<TD nowrap>21:19</TD>
<TD nowrap>OP_MODE</TD>
<TD nowrap>RW</TD>
<TD nowrap>OPERATING MODE</TD>
<TD>Inside the PMIC, this value selects between frequency and voltage mode and selects the target voltage in volatage mode.
<BR>VOLTAGE_600MV = 0 Select voltage mode and target 600mV.
<BR>VOLTAGE_700MV = 1 Select voltage mode and target 700mV.
<BR>VOLTAGE_900MV = 2 Select voltage mode and target 900mV.
<BR>VOLTAGE_1200MV = 3 Select voltage mode and target 1200mV.
<BR>FREQUENCY_MODE = 4 Select frequency mode with VMIN and VMAX protection.
<BR>FREQ_VMIN = 5 Select frequency mode with VMIN protection.
<BR>FREQ_VMAX = 6 Select frequency mode with maximum voltage limiting to XXXmV.
<BR>FREQUENCY_NO_VLIM = 7 Select frequency mode with NO minimum or maximum voltage limiting.
<TR align="left">
<TD nowrap>18:16</TD>
<TD nowrap>VREG_TRIM</TD>
<TD nowrap>RW</TD>
<TD nowrap>REGULATOR TRIM</TD>
<TD>Inside the PMIC, this value selects a trim offset for the target voltage.
<TR align="left">
<TD nowrap>15:8</TD>
<TD nowrap>SEL_PD</TD>
<TD nowrap>RW</TD>
<TD nowrap>DRIVER UP PULSE WIDTH</TD>
<TD>Inside the PMIC, this value controls the switch drivers UP pulse width. It defaults to the 900mV setting at reset. This value is ignored during initialization.
<TR align="left">
<TD nowrap>7:0</TD>
<TD nowrap>PU_BYPASS</TD>
<TD nowrap>RW</TD>
<TD nowrap>DRIVER PULL UP PULSE WIDTH BYPASS</TD>
<TD>Inside the PMIC, this value controls the switch drivers pull UP pulse width. This value is only used in the driver if BYPASS_PU is also a one.
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>Control bits headed for the PMIC. These are all captured in the PMIC by LOAD_L. The LOAD_L pulse is automatically generated whenever this register is written, provided that the WRITE bit is written as a one on the same cycle.</P>
<BR><HR>
<H2 id="PMIC_M3_CSR2"><A href="#index">
IO_RTC_PMIC_M3_CSR2</A></H2>
<P><FONT size="+1"><B>PMIC_M3 CONTROL REGISTER 2</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_PMIC_M3_CSR2 ADDRESS:</B></TD>
<TD><CODE>0x5001007c</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#e0e0e0" colspan="24">RSVD<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="8">FREQ_TARGET<BR><TT>0x10</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:8</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>7:0</TD>
<TD nowrap>FREQ_TARGET</TD>
<TD nowrap>RW</TD>
<TD nowrap>FREQUENCY TARGET TO M3 PMIC</TD>
<TD>This field defines the target frequency of the M3 PMIC based on this equation: FREQ_TARGET = ((Oscillator Clock / Reference Clock) / 2)
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>This register contains the frequency target value for the M3 PMIC.</P>
<BR><HR>
<H2 id="LDO_CSR"><A href="#index">
IO_RTC_LDO_CSR</A></H2>
<P><FONT size="+1"><B>ADC AND TEMP SENSE LDO CONTROL REGISTER</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_LDO_CSR ADDRESS:</B></TD>
<TD><CODE>0x50010080</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#e0e0e0" colspan="22">RSVD2<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="6">VREF_TRIM<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#e0e0e0" colspan="3">RSVD1<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">LDO_BALLAST<BR><TT>0x0</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:10</TD>
<TD nowrap>RSVD2</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>9:4</TD>
<TD nowrap>VREF_TRIM</TD>
<TD nowrap>RW</TD>
<TD nowrap>REFERENCE TRIM</TD>
<TD>Voltage reference trim.
<TR align="left">
<TD nowrap>3:1</TD>
<TD nowrap>RSVD1</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>0:0</TD>
<TD nowrap>LDO_BALLAST</TD>
<TD nowrap>RW</TD>
<TD nowrap>ENABLE BALLAST LOAD CURRENT</TD>
<TD>Enables a ballast load current for LDO output.
<BR>DISABLE = 0 Disable load current.
<BR>ENABLE = 1 Enable load current.
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>Control bits headed for the LDO. These are all direct drive from the RTC register bits to analog trim inputs. Changing a bit here will have a direct affect on the analog trim for the LDO.</P>
<BR><HR>
<H2 id="PMIC_FREF_AO_CSR"><A href="#index">
IO_RTC_PMIC_FREF_AO_CSR</A></H2>
<P><FONT size="+1"><B>PMIC FREF CONTROL REGISTER FOR AO SOURCES</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_PMIC_FREF_AO_CSR ADDRESS:</B></TD>
<TD><CODE>0x50010084</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#e0e0e0" colspan="4">RSVD4<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">PMIC_DSP_CLK_SRC<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="3">BUCK_DSP_SEL_LOW<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#e0e0e0" colspan="4">RSVD3<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">PMIC_M3_CLK_SRC<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="3">PMIC_M3_SEL_LOW<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#e0e0e0" colspan="4">RSVD2<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">PMIC_MEM_CLK_SRC<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="3">PMIC_MEM_SEL_LOW<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#e0e0e0" colspan="4">RSVD1<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">PMIC_AO_CLK_SRC<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="3">PMIC_AO_SEL_LOW<BR><TT>0x0</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:28</TD>
<TD nowrap>RSVD4</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>27:27</TD>
<TD nowrap>PMIC_DSP_CLK_SRC</TD>
<TD nowrap>RW</TD>
<TD nowrap>CLOCK SOURCE TO DSP PMIC</TD>
<TD>This field selects whether the HFO or the 32KHz XTAL is used for the PMIC external reference. It is used when the M3 is powered down.
<BR>XTAL = 0 Use 32KHz crystal (default)
<BR>HFO = 1 Use HFO as the source.
<TR align="left">
<TD nowrap>26:24</TD>
<TD nowrap>BUCK_DSP_SEL_LOW</TD>
<TD nowrap>RW</TD>
<TD nowrap>32KHz DIVIDER FOR BUCK_DSP WHEN CLOCKED FROM AO</TD>
<TD>This field defines the frequency divider applied to the 32KHz low frequency reference.
<BR>1BY1 = 0 Divider is set for 1 divided by 1, i.e. 32768Hz.
<BR>1BY2 = 1 Divider is set for 1 divided by 2, i.e. 16384Hz.
<BR>1BY4 = 2 Divider is set for 1 divided by 4, i.e. 8192Hz.
<BR>1BY8 = 3 Divider is set for 1 divided by 8, i.e. 4096Hz.
<BR>1BY16 = 4 Divider is set for 1 divided by 16, i.e. 2048Hz.
<BR>1BY32 = 5 Divider is set for 1 divided by 32, i.e. 1024Hz.
<BR>1BY64 = 6 Divider is set for 1 divided by 64, i.e. 512Hz.
<BR>1BY128 = 7 Divider is set for 1 divided by 128, i.e. 256Hz.
<TR align="left">
<TD nowrap>23:20</TD>
<TD nowrap>RSVD3</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>19:19</TD>
<TD nowrap>PMIC_M3_CLK_SRC</TD>
<TD nowrap>RW</TD>
<TD nowrap>CLOCK SOURCE TO M3 PMIC</TD>
<TD>This field selects whether the HFO or the 32KHz XTAL is used for the PMIC external reference. It is used when the M3 is powered down.
<BR>XTAL = 0 Use 32KHz crystal (default)
<BR>HFO = 1 Use HFO as the source.
<TR align="left">
<TD nowrap>18:16</TD>
<TD nowrap>PMIC_M3_SEL_LOW</TD>
<TD nowrap>RW</TD>
<TD nowrap>32KHz DIVIDER FOR PMIC_M3 WHEN CLOCKED FROM AO</TD>
<TD>This field defines the frequency divider applied to the 32KHz low frequency reference.
<BR>1BY1 = 0 Divider is set for 1 divided by 1, i.e. 32768Hz.
<BR>1BY2 = 1 Divider is set for 1 divided by 2, i.e. 16384Hz.
<BR>1BY4 = 2 Divider is set for 1 divided by 4, i.e. 8192Hz.
<BR>1BY8 = 3 Divider is set for 1 divided by 8, i.e. 4096Hz.
<BR>1BY16 = 4 Divider is set for 1 divided by 16, i.e. 2048Hz.
<BR>1BY32 = 5 Divider is set for 1 divided by 32, i.e. 1024Hz.
<BR>1BY64 = 6 Divider is set for 1 divided by 64, i.e. 512Hz.
<BR>1BY128 = 7 Divider is set for 1 divided by 128, i.e. 256Hz.
<TR align="left">
<TD nowrap>15:12</TD>
<TD nowrap>RSVD2</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>11:11</TD>
<TD nowrap>PMIC_MEM_CLK_SRC</TD>
<TD nowrap>RW</TD>
<TD nowrap>CLOCK SOURCE TO MEM PMIC</TD>
<TD>This field selects whether the HFO or the 32KHz XTAL is used for the PMIC external reference. It is used when the M3 is powered down.
<BR>XTAL = 0 Use 32KHz crystal (default)
<BR>HFO = 1 Use HFO as the source.
<TR align="left">
<TD nowrap>10:8</TD>
<TD nowrap>PMIC_MEM_SEL_LOW</TD>
<TD nowrap>RW</TD>
<TD nowrap>32KHz DIVIDER FOR PMIC_MEM WHEN CLOCKED FROM AO</TD>
<TD>This field defines the frequency divider applied to the 32KHz low frequency reference.
<BR>1BY1 = 0 Divider is set for 1 divided by 1, i.e. 32768Hz.
<BR>1BY2 = 1 Divider is set for 1 divided by 2, i.e. 16384Hz.
<BR>1BY4 = 2 Divider is set for 1 divided by 4, i.e. 8192Hz.
<BR>1BY8 = 3 Divider is set for 1 divided by 8, i.e. 4096Hz.
<BR>1BY16 = 4 Divider is set for 1 divided by 16, i.e. 2048Hz.
<BR>1BY32 = 5 Divider is set for 1 divided by 32, i.e. 1024Hz.
<BR>1BY64 = 6 Divider is set for 1 divided by 64, i.e. 512Hz.
<BR>1BY128 = 7 Divider is set for 1 divided by 128, i.e. 256Hz.
<TR align="left">
<TD nowrap>7:4</TD>
<TD nowrap>RSVD1</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>3:3</TD>
<TD nowrap>PMIC_AO_CLK_SRC</TD>
<TD nowrap>RW</TD>
<TD nowrap>CLOCK SOURCE TO AO PMIC</TD>
<TD>This field selects whether the HFO or the 32KHz XTAL is used for the PMIC external reference. It is used when the M3 is powered down.
<BR>XTAL = 0 Use 32KHz crystal (default)
<BR>HFO = 1 Use HFO as the source.
<TR align="left">
<TD nowrap>2:0</TD>
<TD nowrap>PMIC_AO_SEL_LOW</TD>
<TD nowrap>RW</TD>
<TD nowrap>32KHz DIVIDER FOR PMIC_AO WHEN CLOCKED FROM AO</TD>
<TD>This field defines the frequency divider applied to the 32KHz low frequency reference.
<BR>1BY1 = 0 Divider is set for 1 divided by 1, i.e. 32768Hz.
<BR>1BY2 = 1 Divider is set for 1 divided by 2, i.e. 16384Hz.
<BR>1BY4 = 2 Divider is set for 1 divided by 4, i.e. 8192Hz.
<BR>1BY8 = 3 Divider is set for 1 divided by 8, i.e. 4096Hz.
<BR>1BY16 = 4 Divider is set for 1 divided by 16, i.e. 2048Hz.
<BR>1BY32 = 5 Divider is set for 1 divided by 32, i.e. 1024Hz.
<BR>1BY64 = 6 Divider is set for 1 divided by 62, i.e. 512Hz.
<BR>1BY128 = 7 Divider is set for 1 divided by 128, i.e. 256Hz.
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>This register contains the AO state dividers for the 3 PMIC clock references.</P>
<BR><HR>
<H2 id="BUCK_DSP_CSR"><A href="#index">
IO_RTC_BUCK_DSP_CSR</A></H2>
<P><FONT size="+1"><B>BUCK_DSP CONTROL REGISTER</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_BUCK_DSP_CSR ADDRESS:</B></TD>
<TD><CODE>0x50010088</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#c0c0c0" colspan="1">READY<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#c0c0c0" colspan="1">STABLE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">WRITE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">SEL_OSC<BR><TT>0x1</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="3">SEL_OSC_DIV<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">SEL_VREG<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">FMODE_RST_L_N<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">SEL_REF_EXT<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="3">OP_MODE<BR><TT>0x1</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="3">VREG_TRIM<BR><TT>0x2</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="8">SEL_PD<BR><TT>0x42</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="8">PU_BYPASS<BR><TT>0x1e</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:31</TD>
<TD nowrap>READY</TD>
<TD nowrap>RO</TD>
<TD nowrap>READY REPORTED FROM BUCK</TD>
<TD>The BUCK reports not ready, 0x0, whenever it is powered up. Firmware can use this bit to know when the target voltage has been reached.
<TR align="left">
<TD nowrap>30:30</TD>
<TD nowrap>STABLE</TD>
<TD nowrap>RO</TD>
<TD nowrap>STABLE REPORTED FROM BUCK</TD>
<TD>This bit reports not stable, 0x0, whenever its target voltage is changed by firmware. Firmware can use this bit to know when the target voltage has been reached.
<TR align="left">
<TD nowrap>29:29</TD>
<TD nowrap>WRITE</TD>
<TD nowrap>WO</TD>
<TD nowrap>WRITE TO BUCK</TD>
<TD>Set this write only bit to one to issue a LOAD_L pulse to the BUCK causing it to capture the values from this register.
<TR align="left">
<TD nowrap>28:28</TD>
<TD nowrap>SEL_OSC</TD>
<TD nowrap>RW</TD>
<TD nowrap>SELECT WHICH CLOCK SOURCE (HFO or 32KHz).</TD>
<TD>Selects which clock source to use for the divider in the peripheral which can drive the DSP BUCK.
<BR>HFO = 0 Select the 8MHz HFO clock source into the divider.
<BR>XTAL = 1 Select the 32KHz clock source into the divider.
<TR align="left">
<TD nowrap>27:25</TD>
<TD nowrap>SEL_OSC_DIV</TD>
<TD nowrap>RW</TD>
<TD nowrap>SELECT WHICH HFO DIVIDER TO USE</TD>
<TD>Selects which HFO divider to use as an external clock for this BUCK.
<BR>1BY1 = 0 Divider is set for 1 divided by 1, i.e. 2MHz or 32768Hz.
<BR>1BY2 = 1 Divider is set for 1 divided by 2, i.e. 1MHz or 16384Hz.
<BR>1BY4 = 2 Divider is set for 1 divided by 4, i.e. 500KHz or 8192Hz.
<BR>1BY8 = 3 Divider is set for 1 divided by 8, i.e. 250KHz or 4096Hz.
<BR>1BY16 = 4 Divider is set for 1 divided by 16, i.e. 125KHz or 2048Hz.
<BR>1BY32 = 5 Divider is set for 1 divided by 32, i.e. 62500Hz or 1024Hz.
<BR>1BY64 = 6 Divider is set for 1 divided by 64, i.e. 512Hz (only 32KHz source).
<BR>1BY128 = 7 Divider is set for 1 divided by 128, i.e. 256Hz (only 32KHz source).
<TR align="left">
<TD nowrap>24:24</TD>
<TD nowrap>SEL_VREG</TD>
<TD nowrap>RW</TD>
<TD nowrap>SELECT VREG RAIL TO MONITOR</TD>
<TD>Set to one to monitor VDD_DSP after the power switch. Set to zero to monitor before the switch.
<BR>REG_OUTPUT = 0 Select monitoring the regulator output.
<BR>POST_SWITCH = 1 Select monitoring the voltage after it is switched.
<TR align="left">
<TD nowrap>23:23</TD>
<TD nowrap>FMODE_RST_L_N</TD>
<TD nowrap>RW</TD>
<TD nowrap>FREQUENCY MODE RESET INVERTED</TD>
<TD>Inside the BUCK, this value forces a reset to the frequency mode counters. This should be 0 before switching to frequency mode. After the switch this should be set to one.
<BR>RESET = 1 Select RESET operation for the frequency mode of operation.
<BR>NORMAL = 0 Select NORMAL operation for the frequency mode of operation.
<TR align="left">
<TD nowrap>22:22</TD>
<TD nowrap>SEL_REF_EXT</TD>
<TD nowrap>RW</TD>
<TD nowrap>SELECT REFERENCE CLOCK</TD>
<TD>Inside the BUCK, this value selects between REF_CLK_PWR_UP and REF_CLK input to the BUCK.
<BR>INITIAL = 0 Select initial operation by using the internal reference clock.
<BR>NORMAL = 1 Select the reference clock that is supplied to the BUCK block.
<TR align="left">
<TD nowrap>21:19</TD>
<TD nowrap>OP_MODE</TD>
<TD nowrap>RW</TD>
<TD nowrap>OPERATING MODE</TD>
<TD>Inside the BUCK, this value selects between frequency and voltage mode and selects the target voltage in volatage mode.
<BR>VOLTAGE_600MV = 0 Select voltage mode and target 600mV.
<BR>VOLTAGE_700MV = 1 Select voltage mode and target 700mV.
<BR>VOLTAGE_900MV = 2 Select voltage mode and target 900mV.
<BR>VOLTAGE_1200MV = 3 Select voltage mode and target 1200mV.
<BR>FREQUENCY_MODE = 4 Select frequency mode with VMIN and VMAX protection.
<BR>FREQ_VMIN = 5 Select frequency mode with VMIN protection.
<BR>FREQ_VMAX = 6 Select frequency mode with maximum voltage limiting to XXXmV.
<BR>FREQUENCY_NO_VLIM = 7 Select frequency mode with NO minimum or maximum voltage limiting.
<TR align="left">
<TD nowrap>18:16</TD>
<TD nowrap>VREG_TRIM</TD>
<TD nowrap>RW</TD>
<TD nowrap>REGULATOR TRIM</TD>
<TD>Inside the BUCK, this value selects a trim offset for the target voltage.
<TR align="left">
<TD nowrap>15:8</TD>
<TD nowrap>SEL_PD</TD>
<TD nowrap>RW</TD>
<TD nowrap>DRIVER UP PULSE WIDTH</TD>
<TD>Inside the BUCK, this value controls the switch drivers UP pulse width. It defaults to the 900mV setting at reset. This value is ignored during initialization.
<TR align="left">
<TD nowrap>7:0</TD>
<TD nowrap>PU_BYPASS</TD>
<TD nowrap>RW</TD>
<TD nowrap>DRIVER PULL UP PULSE WIDTH BYPASS</TD>
<TD>Inside the BUCK, this value controls the switch drivers pull  UP pulse width. This value is only used in the driver if BYPASS_PU is also a one.
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>Control bits headed for the BUCK. These are all captured in the BUCK by LOAD_L. The LOAD_L pulse is automatically generated whenever this register is written, provided that the WRITE bit is written as a one on the same cycle.</P>
<BR><HR>
<H2 id="BUCK_DSP_CSR2"><A href="#index">
IO_RTC_BUCK_DSP_CSR2</A></H2>
<P><FONT size="+1"><B>BUCK_DSP CONTROL REGISTER 2</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_BUCK_DSP_CSR2 ADDRESS:</B></TD>
<TD><CODE>0x5001008c</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#e0e0e0" colspan="24">RSVD<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="8">FREQ_TARGET<BR><TT>0x10</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:8</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>7:0</TD>
<TD nowrap>FREQ_TARGET</TD>
<TD nowrap>RW</TD>
<TD nowrap>FREQUENCY TARGET TO DSP BUCK</TD>
<TD>This field defines the target frequency of the DSP BUCK based on this equation: FREQ_TARGET = ((Oscillator Clock / Reference Clock) / 2)
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>This register contains the frequency target value for the DSP BUCK.</P>
<BR><HR>
<H2 id="PULL_ENABLE"><A href="#index">
IO_RTC_PULL_ENABLE</A></H2>
<P><FONT size="+1"><B>PULL UP OR DOWN RESISTOR ENABLE REGISTER</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_PULL_ENABLE ADDRESS:</B></TD>
<TD><CODE>0x50010090</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#ffffff" colspan="32">VALUE<BR><TT>0xffffffff</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:0</TD>
<TD nowrap>VALUE</TD>
<TD nowrap>RW</TD>
<TD nowrap>GPIO PULL ENABLE</TD>
<TD>Set to 1 to enable the pull up or down resistor in the GPIO PAD.
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>Pull Up or Down Resistor Enable register for the GPIO. The PADs have 2 resistors in them. One for pulling up and one for pulling down. Bits in this register enable a resistor in the corresponding pad. Which resistor (up or down) is selected in the IO_GPIO8_PULL_DIRECTION register.</P>
<BR><HR>
<H2 id="PULL_DIRECTION"><A href="#index">
IO_RTC_PULL_DIRECTION</A></H2>
<P><FONT size="+1"><B>PULL UP OR DOWN ENABLE REGISTER</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_PULL_DIRECTION ADDRESS:</B></TD>
<TD><CODE>0x50010094</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#ffffff" colspan="32">VALUE<BR><TT>0xffffffff</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:0</TD>
<TD nowrap>VALUE</TD>
<TD nowrap>RW</TD>
<TD nowrap>GPIO PULL DIRECTION</TD>
<TD>Set to 1 to select the pull up resistor in the GPIO PAD. Set to 0 to select the pull down resistor in the GPIO PAD. NOTE: Use IO_GPIO8_PULL_ENABLE to actually turn on the resistor in the pad.
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>Pull Up or Down Enable register for the GPIO.</P>
<BR><HR>
<H2 id="SPI0_CTRL"><A href="#index">
IO_RTC_SPI0_CTRL</A></H2>
<P><FONT size="+1"><B>SPI Pad Control</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_SPI0_CTRL ADDRESS:</B></TD>
<TD><CODE>0x50010098</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#e0e0e0" colspan="20">RSVD3<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">SPI2_DYNAMIC_MISO_PULL_DISABLE_ALT<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">SPI2_DYNAMIC_MISO_PULL_DISABLE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">SPI1_DYNAMIC_MISO_PULL_DISABLE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">SPI0_DYNAMIC_MISO_PULL_DISABLE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#e0e0e0" colspan="2">RSVD2<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">SPI0_MISO_RE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">SPI0_MISO_PU<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">SPI0_MOSI_RE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">SPI0_MOSI_PU<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">SPI0_SCLK_RE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">SPI0_SCLK_PU<BR><TT>0x0</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:12</TD>
<TD nowrap>RSVD3</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>11:11</TD>
<TD nowrap>SPI2_DYNAMIC_MISO_PULL_DISABLE_ALT</TD>
<TD nowrap>RW</TD>
<TD nowrap>SPI2 MISO Dynamic Pull Disable Alternate Location</TD>
<TD>If 0, SPI0_MISO_RE determines if the pull is active. If 1, the SPI state machine can disable the pull (up or down)
when it expects the remote device to be driving the MISO line. This should save power during transfers.
<TR align="left">
<TD nowrap>10:10</TD>
<TD nowrap>SPI2_DYNAMIC_MISO_PULL_DISABLE</TD>
<TD nowrap>RW</TD>
<TD nowrap>SPI2 MISO Dynamic Pull Disable</TD>
<TD>If 0, SPI0_MISO_RE determines if the pull is active. If 1, the SPI state machine can disable the pull (up or down)
when it expects the remote device to be driving the MISO line. This should save power during transfers.
<TR align="left">
<TD nowrap>9:9</TD>
<TD nowrap>SPI1_DYNAMIC_MISO_PULL_DISABLE</TD>
<TD nowrap>RW</TD>
<TD nowrap>SPI1 MISO Dynamic Pull Disable</TD>
<TD>If 0, SPI0_MISO_RE determines if the pull is active. If 1, the SPI state machine can disable the pull (up or down)
when it expects the remote device to be driving the MISO line. This should save power during transfers.
<TR align="left">
<TD nowrap>8:8</TD>
<TD nowrap>SPI0_DYNAMIC_MISO_PULL_DISABLE</TD>
<TD nowrap>RW</TD>
<TD nowrap>SPI0 MISO Dynamic Pull Disable</TD>
<TD>If 0, SPI0_MISO_RE determines if the pull is active. If 1, the SPI state machine can disable the pull (up or down)
when it expects the remote device to be driving the MISO line. This should save power during transfers.
<TR align="left">
<TD nowrap>7:6</TD>
<TD nowrap>RSVD2</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>5:5</TD>
<TD nowrap>SPI0_MISO_RE</TD>
<TD nowrap>RW</TD>
<TD nowrap>SPI0_MISO Pull enable</TD>
<TD>If 0, SPI0_MISO has no pull up or pull down enabled. Set to 1 to enable the weak internal pull up or pull down.
<TR align="left">
<TD nowrap>4:4</TD>
<TD nowrap>SPI0_MISO_PU</TD>
<TD nowrap>RW</TD>
<TD nowrap>SPI0_MISO Pull High</TD>
<TD>If SPI0_MISO_RE is clear, this bit has no effect. If SPI0_MISO_RE is set, then this bit selects
if the pull is high (1) or if it is low (0).
<TR align="left">
<TD nowrap>3:3</TD>
<TD nowrap>SPI0_MOSI_RE</TD>
<TD nowrap>RW</TD>
<TD nowrap>SPI0_MOSI Pull enable</TD>
<TD>If 0, SPI0_MOSI has no pull up or pull down enabled. Set to 1 to enable the weak internal pull up or pull down.
<TR align="left">
<TD nowrap>2:2</TD>
<TD nowrap>SPI0_MOSI_PU</TD>
<TD nowrap>RW</TD>
<TD nowrap>SPI0_MOSI Pull High</TD>
<TD>If SPI0_MOSI_RE is clear, this bit has no effect. If SPI0_MOSI_RE is set, then this bit selects
if the pull is high (1) or if it is low (0).
<TR align="left">
<TD nowrap>1:1</TD>
<TD nowrap>SPI0_SCLK_RE</TD>
<TD nowrap>RW</TD>
<TD nowrap>SPI0_SCLK Pull enable</TD>
<TD>If 0, SPI0_SCLK has no pull up or pull down enabled. Set to 1 to enable the weak internal pull up or pull down.
<TR align="left">
<TD nowrap>0:0</TD>
<TD nowrap>SPI0_SCLK_PU</TD>
<TD nowrap>RW</TD>
<TD nowrap>SPI0_SCLK Pull High</TD>
<TD>If SPI0_SCLK_RE is clear, this bit has no effect. If SPI0_SCLK_RE is set, then this bit selects
if the pull is high (1) or if it is low (0).
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>This register controls various pad functions for
SPI0_CLK, SPI0_MOSI and SPI0_MISO. Unless otherwise stated,
these pins affect these pads in any padmux configuration.</P>
<BR><HR>
<H2 id="UART0_CTRL"><A href="#index">
IO_RTC_UART0_CTRL</A></H2>
<P><FONT size="+1"><B>UART 0 Pad Control</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_UART0_CTRL ADDRESS:</B></TD>
<TD><CODE>0x5001009c</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#e0e0e0" colspan="28">RSVD2<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">UART0_CTS_RE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">UART0_CTS_PU<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">UART0_RX_RE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">UART0_RX_PU<BR><TT>0x0</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:4</TD>
<TD nowrap>RSVD2</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>3:3</TD>
<TD nowrap>UART0_CTS_RE</TD>
<TD nowrap>RW</TD>
<TD nowrap>UART0_CTS Pull enable</TD>
<TD>If 0, UART0_CTS has no pull up or pull down enabled. Set to 1 to enable the weak internal pull up or pull down.
<TR align="left">
<TD nowrap>2:2</TD>
<TD nowrap>UART0_CTS_PU</TD>
<TD nowrap>RW</TD>
<TD nowrap>UART0_CTS Pull High</TD>
<TD>If UART0_CTS_RE is clear, this bit has no effect. If UART0_CTS_RE is set, then this bit selects
if the pull is high (1) or if it is low (0).
<TR align="left">
<TD nowrap>1:1</TD>
<TD nowrap>UART0_RX_RE</TD>
<TD nowrap>RW</TD>
<TD nowrap>UART0_RX Pull enable</TD>
<TD>If 0, UART0_RX has no pull up or pull down enabled. Set to 1 to enable the weak internal pull up or pull down.
<TR align="left">
<TD nowrap>0:0</TD>
<TD nowrap>UART0_RX_PU</TD>
<TD nowrap>RW</TD>
<TD nowrap>UART0_RX Pull High</TD>
<TD>If UART0_RX_RE is clear, this bit has no effect. If UART0_RX_RE is set, then this bit selects
if the pull is high (1) or if it is low (0).
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>This register controls various pad functions for
UART0_RX,and UART0_CTS. Unless otherwise stated,
these pins affect these pads in any padmux configuration.</P>
<BR><HR>
<H2 id="AO_CSR2"><A href="#index">
IO_RTC_AO_CSR2</A></H2>
<P><FONT size="+1"><B>AO CONTROL AND STATUS REGISTER 2</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_AO_CSR2 ADDRESS:</B></TD>
<TD><CODE>0x500100a0</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#c0c0c0" colspan="1">TWO_INDUCTOR_MODE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#e0e0e0" colspan="21">RSVD2<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">WDT_CLK_DIS<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">TMR_CLK_DIS<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#e0e0e0" colspan="3">RSVD1<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">OVRD_CLK_GATE_HFO2PMIC<BR><TT>0x1</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">PM_PD_DISABLE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">WAKE_POLARITY<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">WAKE_RE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">WAKE_PU<BR><TT>0x0</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:31</TD>
<TD nowrap>TWO_INDUCTOR_MODE</TD>
<TD nowrap>RO</TD>
<TD nowrap>TWO INDUCTOR MODE CAPTURED VALUE</TD>
<TD>This read only  value shows the state of the flip flop that captures the state of the WAKE pin shortly after POR.
<BR>FOUR_INDUCTOR = 0 Assumes M3 and DSP are each on their own PMIC.
<BR>TWO_INDUCTOR = 1 Assumes M3 and DSP tied to AO PMIC.
<TR align="left">
<TD nowrap>30:10</TD>
<TD nowrap>RSVD2</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>9:9</TD>
<TD nowrap>WDT_CLK_DIS</TD>
<TD nowrap>RW</TD>
<TD nowrap>RTC WATCHDOG TIMER CLOCK DISABLE</TD>
<TD>Set this bit to one to disable the RTC WDT clock for lower power.
<TR align="left">
<TD nowrap>8:8</TD>
<TD nowrap>TMR_CLK_DIS</TD>
<TD nowrap>RW</TD>
<TD nowrap>RTC TIMER CLOCK DISABLE</TD>
<TD>Set this bit to one to disable the RTC TMR clock for lower power.
<TR align="left">
<TD nowrap>7:5</TD>
<TD nowrap>RSVD1</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>4:4</TD>
<TD nowrap>OVRD_CLK_GATE_HFO2PMIC</TD>
<TD nowrap>RW</TD>
<TD nowrap>OVERRIDE CLOCK GATE HFO DIVIDER TO PMICS</TD>
<TD>Set this bit to one to disable the source clock gating of the HFO divider to PMIC external clock input.
<TR align="left">
<TD nowrap>3:3</TD>
<TD nowrap>PM_PD_DISABLE</TD>
<TD nowrap>RW</TD>
<TD nowrap>DISABLE PULL DOWN ON GPIO_PM PIN</TD>
<TD>Set this bit to one to disable the pull down resistor in the GPIO_PM PAD.
<TR align="left">
<TD nowrap>2:2</TD>
<TD nowrap>WAKE_POLARITY</TD>
<TD nowrap>RW</TD>
<TD nowrap>CONTROLS THE POLARITY OF THE WAKE PIN INPUT</TD>
<TD>Set this bit to one to invert the expected polarity of the WAKE pin input.
<TR align="left">
<TD nowrap>1:1</TD>
<TD nowrap>WAKE_RE</TD>
<TD nowrap>RW</TD>
<TD nowrap>CONTROLS THE PULL RESISTOR ENABLE</TD>
<TD>Set this bit to one to enable the pull resistor (default). Set to zero to disable.
<TR align="left">
<TD nowrap>0:0</TD>
<TD nowrap>WAKE_PU</TD>
<TD nowrap>RW</TD>
<TD nowrap>CONTROLS THE PULL RESISTOR DIRECTION</TD>
<TD>Set this bit to one to select a pull up direction. Set this bit to zero to select a pull down direction for the pad resistors.
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>This register contains status and controls for the always on block.</P>
<BR><HR>
<H2 id="BROWNOUT"><A href="#index">
IO_RTC_BROWNOUT</A></H2>
<P><FONT size="+1"><B>BROWNOUT DETECTOR</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_BROWNOUT ADDRESS:</B></TD>
<TD><CODE>0x500100a4</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#e0e0e0" colspan="25">RSVD1<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#c0c0c0" colspan="1">BOD_STATE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">FLIP<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">TEST<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">IRQ_ENABLE_UP<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">IRQ_UP<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">IRQ_ENABLE_DOWN<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">IRQ_DOWN<BR><TT>0x0</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:7</TD>
<TD nowrap>RSVD1</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>6:6</TD>
<TD nowrap>BOD_STATE</TD>
<TD nowrap>RO</TD>
<TD nowrap>STATE OF ANALOG BOD</TD>
<TD>This read only bit provides the current state of the brown out detector signal (BOD) coing from analog.
<TR align="left">
<TD nowrap>5:5</TD>
<TD nowrap>FLIP</TD>
<TD nowrap>RW</TD>
<TD nowrap>COMPLEMENT BOD INPUT FROM ANALOG</TD>
<TD>Set this bit to one to immediately complement the polarity of the input from the analog brown out detector.  This allows for program testing in a program synchronous way.
<TR align="left">
<TD nowrap>4:4</TD>
<TD nowrap>TEST</TD>
<TD nowrap>RW</TD>
<TD nowrap>ENABLE 1KHZ TEST CLOCK</TD>
<TD>Set this bit to one to enable 1KHz test clock to XOR with analog brownout detetor input. This will cause the interrupts to fire up every millisecond and down every millisecond, but separated in time by 500 microseconds. This allows for program testing at a more systems level.
<TR align="left">
<TD nowrap>3:3</TD>
<TD nowrap>IRQ_ENABLE_UP</TD>
<TD nowrap>RW</TD>
<TD nowrap>ENABLE INTERRUPT ON RISING EDGE OF BOD</TD>
<TD>Set this bit to one to enable IRQ_UP to the NVIC.
<TR align="left">
<TD nowrap>2:2</TD>
<TD nowrap>IRQ_UP</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>INTERRUPT ON RISING EDGE OF BOD</TD>
<TD>This bit is set when the BOD goes from zero to one. Write a one to this bit to clear it.
<BR>ABSENT = 0 Interrupt status bit is not set.
<BR>PRESENT = 1 Interrupt status bit is set.
<TR align="left">
<TD nowrap>1:1</TD>
<TD nowrap>IRQ_ENABLE_DOWN</TD>
<TD nowrap>RW</TD>
<TD nowrap>ENABLE INTERRUPT ON FALLING EDGE OF BOD</TD>
<TD>Set this bit to one to enable IRQ_dOWN to the NVIC.
<TR align="left">
<TD nowrap>0:0</TD>
<TD nowrap>IRQ_DOWN</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>INTERRUPT ON FALLING EDGE OF BOD</TD>
<TD>This bit is set when the BOD goes from one to zero. Write a one to this bit to clear it.
<BR>ABSENT = 0 Interrupt status bit is not set.
<BR>PRESENT = 1 Interrupt status bit is set.
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>This register contains the status and controls for the brown out detector. One can monitor the state of the BOD coming from analog here. In addition this register contains two interrupt status bits:  one for BOD rising and one for BOD falling.  Finally, it contains two interrupt enable bits that enable the status bits to the NVIC</P>
<BR><HR>
<H2 id="OSC_CSR2"><A href="#index">
IO_RTC_OSC_CSR2</A></H2>
<P><FONT size="+1"><B>OSCILLATOR CONTROL REGISTER #2</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_OSC_CSR2 ADDRESS:</B></TD>
<TD><CODE>0x500100b0</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#e0e0e0" colspan="23">RSVD<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="5">VHFO_TRIM_CL<BR><TT>0x10</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="3">VHFO_TRIM_GM<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">VHFO_PD_N<BR><TT>0x0</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:9</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>8:4</TD>
<TD nowrap>VHFO_TRIM_CL</TD>
<TD nowrap>RW</TD>
<TD nowrap>VHFO OSCILLATOR CL TRIM</TD>
<TD>Sets the CL trim for the 16MHz oscillator.
<TR align="left">
<TD nowrap>3:1</TD>
<TD nowrap>VHFO_TRIM_GM</TD>
<TD nowrap>RW</TD>
<TD nowrap>VHFO OSCILLATOR GM TRIM</TD>
<TD>Sets the GM trim for the 16MHz oscillator.
<TR align="left">
<TD nowrap>0:0</TD>
<TD nowrap>VHFO_PD_N</TD>
<TD nowrap>RW</TD>
<TD nowrap>CONTROL POWER TO THE VHFO</TD>
<TD>Write 1 to this bit to power up the VHFO.
<BR>OFF = 0 VHFO is powered off.
<BR>ON = 1 VHFO is powered on.
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>Control bits headed for the 16MHz very high frequency audio crystal osciallator (VHFO).</P>
<BR><HR>
<H2 id="CLKOUT_CFG"><A href="#index">
IO_RTC_CLKOUT_CFG</A></H2>
<P><FONT size="+1"><B>CLKOUT CONFIG REGISTER</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_CLKOUT_CFG ADDRESS:</B></TD>
<TD><CODE>0x500100c0</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#e0e0e0" colspan="31">RSVD<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">EN<BR><TT>0x0</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:1</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>0:0</TD>
<TD nowrap>EN</TD>
<TD nowrap>RW</TD>
<TD nowrap>CLKOUT ENABLED</TD>
<TD>Enables the CLKOUT logic.
<BR>DISABLED = 0 CLKOUT is disabled
<BR>ENABLED = 1 CLKOUT is enabled
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>Configuration register for CLKOUT.</P>
<BR><HR>
<H2 id="CLKOUT_CTRL"><A href="#index">
IO_RTC_CLKOUT_CTRL</A></H2>
<P><FONT size="+1"><B>CLKOUT CONTROL REGISTER</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_CLKOUT_CTRL ADDRESS:</B></TD>
<TD><CODE>0x500100c4</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#e0e0e0" colspan="23">RSVD<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="9">SEL<BR><TT>0x0</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:9</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>8:0</TD>
<TD nowrap>SEL</TD>
<TD nowrap>RW</TD>
<TD nowrap>CLKOUT SELECTOR</TD>
<TD>One-hot register which selects the active source of CLKOUT.
<BR>NONE = 0 CLKOUT is disabled
<BR>32KHZ = 1 32kHz from the 32kHz XTAL
<BR>16KHZ = 2 16kHz from the 32kHz XTAL
<BR>8KHZ = 4 8kHz from the 32kHz XTAL
<BR>4KHZ = 8 4kHz from the 32kHz XTAL
<BR>2MHZ = 16 2MHz from the 16MHz XTAL
<BR>1MHZ = 32 1MHz from the 16MHz XTAL
<BR>512KHZ = 64 512kHz from the 16MHz XTAL
<BR>256KHZ = 128 256kHz from the 16MHz XTAL
<BR>ADC_TOGGLE = 256 ADC Toggle Signal
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>Control register for CLKOUT.</P>
<BR><HR>
<H2 id="DRIFT_PPQ"><A href="#index">
IO_RTC_DRIFT_PPQ</A></H2>
<P><FONT size="+1"><B>XTAL PPQ DRIFT</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_DRIFT_PPQ ADDRESS:</B></TD>
<TD><CODE>0x500100d0</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#ffffff" colspan="32">VALUE<BR><TT>0x0</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:0</TD>
<TD nowrap>VALUE</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>DRIFT PPQ</TD>
<TD>signed 32-bit oscillator drift value.
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>This register holds a signed 32-bit oscillator drift value in units of PPQ.  Setting this register to a non-zero value will activate the drift integrator and trigger 16kHz clock insertions/skips in the event of DRIFT_INTEG overflow/underflow.</P>
<BR><HR>
<H2 id="DRIFT_INTEG"><A href="#index">
IO_RTC_DRIFT_INTEG</A></H2>
<P><FONT size="+1"><B>DRIFT INTEGRATOR REGISTER</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_DRIFT_INTEG ADDRESS:</B></TD>
<TD><CODE>0x500100d4</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#ffffff" colspan="32">VALUE<BR><TT>0x0</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:0</TD>
<TD nowrap>VALUE</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>DRIFT INTEGRATOR</TD>
<TD>signed 32-bit accumulated drift value.
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>This register holds the accumulated PPQ drift.  This register can be written with any initial value.</P>
<BR><HR>
<H2 id="DRIFT_STAT"><A href="#index">
IO_RTC_DRIFT_STAT</A></H2>
<P><FONT size="+1"><B>DRIFT STATUS REGISTER</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_DRIFT_STAT ADDRESS:</B></TD>
<TD><CODE>0x500100d8</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#e0e0e0" colspan="23">RSVD3<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">ENABLE<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#e0e0e0" colspan="3">RSVD2<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">SKIP_TOG<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#e0e0e0" colspan="3">RSVD1<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">ADD_TOG<BR><TT>0x0</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:9</TD>
<TD nowrap>RSVD3</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>8:8</TD>
<TD nowrap>ENABLE</TD>
<TD nowrap>RW</TD>
<TD nowrap>INTEGRATOR ENABLE</TD>
<TD>This bit enables the integrator for drift correction.
<TR align="left">
<TD nowrap>7:5</TD>
<TD nowrap>RSVD2</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>4:4</TD>
<TD nowrap>SKIP_TOG</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>SKIP CYCLE TOGGLE</TD>
<TD>This bit shows the current state of the skip cycle toggle signal. It can be overwritten.
<TR align="left">
<TD nowrap>3:1</TD>
<TD nowrap>RSVD1</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>0:0</TD>
<TD nowrap>ADD_TOG</TD>
<TD nowrap>EMPTY</TD>
<TD nowrap>ADD CYCLE TOGGLE</TD>
<TD>This bit shows the current state of the add cycle toggle signal. It can be overwritten.
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>This register holds various status bits for the drift correction logic.</P>
<BR><HR>
<H2 id="NVRAMA"><A href="#index">
IO_RTC_NVRAMA</A></H2>
<P><FONT size="+1"><B>NVRAM REGISTER a</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_NVRAMA ADDRESS:</B></TD>
<TD><CODE>0x500100e0</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#ffffff" colspan="32">VALUE<BR><TT>0x0</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:0</TD>
<TD nowrap>VALUE</TD>
<TD nowrap>RW</TD>
<TD nowrap>NVRAM VALUE</TD>
<TD>32-bits of non-volatile storage.
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>This register holds a 32-bit value for the application in 32-bits of non-volatile storage.  NOTE: a value written to this register survives all resets except the master POR that happens at true first chip power up.</P>
<BR><HR>
<H2 id="NVRAMB"><A href="#index">
IO_RTC_NVRAMB</A></H2>
<P><FONT size="+1"><B>NVRAM REGISTER B</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_NVRAMB ADDRESS:</B></TD>
<TD><CODE>0x500100e4</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#ffffff" colspan="32">VALUE<BR><TT>0x0</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:0</TD>
<TD nowrap>VALUE</TD>
<TD nowrap>RW</TD>
<TD nowrap>NVRAM VALUE</TD>
<TD>32-bits of non-volatile storage.
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>This register holds a 32-bit value for the application in 32-bits of non-volatile storage.  NOTE: a value written to this register survives all resets except the master POR that happens at true first chip power up.</P>
<BR><HR>
<H2 id="NVRAMC"><A href="#index">
IO_RTC_NVRAMC</A></H2>
<P><FONT size="+1"><B>NVRAM REGISTER C</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_NVRAMC ADDRESS:</B></TD>
<TD><CODE>0x500100e8</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#ffffff" colspan="32">VALUE<BR><TT>0x0</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:0</TD>
<TD nowrap>VALUE</TD>
<TD nowrap>RW</TD>
<TD nowrap>NVRAM VALUE</TD>
<TD>32-bits of non-volatile storage.
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>This register holds a 32-bit value for the application in 32-bits of non-volatile storage.  NOTE: a value written to this register survives all resets except the master POR that happens at true first chip power up.</P>
<BR><HR>
<H2 id="NVRAMD"><A href="#index">
IO_RTC_NVRAMD</A></H2>
<P><FONT size="+1"><B>NVRAM REGISTER D</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_NVRAMD ADDRESS:</B></TD>
<TD><CODE>0x500100ec</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#ffffff" colspan="32">VALUE<BR><TT>0x0</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:0</TD>
<TD nowrap>VALUE</TD>
<TD nowrap>RW</TD>
<TD nowrap>NVRAM VALUE</TD>
<TD>32-bits of non-volatile storage.
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>This register holds a 32-bit value for the application in 32-bits of non-volatile storage.  NOTE: a value written to this register survives all resets except the master POR that happens at true first chip power up.</P>
<BR><HR>
<H2 id="DEBUG"><A href="#index">
IO_RTC_DEBUG</A></H2>
<P><FONT size="+1"><B>Debug</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_DEBUG ADDRESS:</B></TD>
<TD><CODE>0x500100f0</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#c0c0c0" colspan="1">FPANEL_FRAME<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#c0c0c0" colspan="1">WEIRD<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#e0e0e0" colspan="11">RSVD3<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">BUCK_DSP_BYPASS_PU<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">PMIC_M3_BYPASS_PU<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">FORCE_MEM_CLKS<BR><TT>0x1</TT>
</TD>
<TD align="center" bgcolor="#e0e0e0" colspan="7">RSVD2<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">FAST_CLOCK<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#e0e0e0" colspan="3">RSVD1<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">MONTHS_SKIP<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">DAYS_SKIP<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">HOURS_SKIP<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">MINUTES_SKIP<BR><TT>0x0</TT>
</TD>
<TD align="center" bgcolor="#ffffff" colspan="1">SECONDS_SKIP<BR><TT>0x0</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:31</TD>
<TD nowrap>FPANEL_FRAME</TD>
<TD nowrap>RO</TD>
<TD nowrap>TOGGLES ONCE PER FPANEL FRAME</TD>
<TD>Use this bit in diagnostics to count front panel frames.
<TR align="left">
<TD nowrap>30:30</TD>
<TD nowrap>WEIRD</TD>
<TD nowrap>RO</TD>
<TD nowrap>READ ONLY VIEW OF WEIRD BIT</TD>
<TD>This bit provides a read only view of the WEIRD flip flop for diagnostic purposes.
<TR align="left">
<TD nowrap>29:19</TD>
<TD nowrap>RSVD3</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>18:18</TD>
<TD nowrap>BUCK_DSP_BYPASS_PU</TD>
<TD nowrap>RW</TD>
<TD nowrap>BYPASS AUTOMATIC PULL UP VALUE</TD>
<TD>Inside the DSP PMIC, this value bypasses the normal internal generation of the pull down pulse width. It substitutes the PU_BYPASS value instead.
<BR>NORMAL = 0 Select normal operation in which PMIC controls pull down pulse width.
<BR>OVERRIDE = 1 OVERRIDE automatic control function in PMIC.
<TR align="left">
<TD nowrap>17:17</TD>
<TD nowrap>PMIC_M3_BYPASS_PU</TD>
<TD nowrap>RW</TD>
<TD nowrap>BYPASS AUTOMATIC PULL UP VALUE</TD>
<TD>Inside the M3 PMIC, this value bypasses the normal internal generation of the pull down pulse width. It substitutes the PU_BYPASS value instead.
<BR>NORMAL = 0 Select normal operation in which PMIC controls pull down pulse width.
<BR>OVERRIDE = 1 OVERRIDE automatic control function in PMIC.
<TR align="left">
<TD nowrap>16:16</TD>
<TD nowrap>FORCE_MEM_CLKS</TD>
<TD nowrap>RW</TD>
<TD nowrap>FORCE MEM CLOCKS TO REMAIN ON</TD>
<TD>Force memory clocks to remain on. This one resets to one to guarantee memories will come up.
<TR align="left">
<TD nowrap>15:9</TD>
<TD nowrap>RSVD2</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>8:8</TD>
<TD nowrap>FAST_CLOCK</TD>
<TD nowrap>RW</TD>
<TD nowrap>USE 512Hz INSTEAD OF 1HZ</TD>
<TD>Select fast clock for time of day testing and debug.
<TR align="left">
<TD nowrap>7:5</TD>
<TD nowrap>RSVD1</TD>
<TD nowrap>RSVD</TD>
<TD nowrap>Reserved</TD>
<TD>Always write zero to reserved bit fields.
<TR align="left">
<TD nowrap>4:4</TD>
<TD nowrap>MONTHS_SKIP</TD>
<TD nowrap>RW</TD>
<TD nowrap>SKIP MONTHS INCREMENT 12 to 1</TD>
<TD>Assume a carry out on every RTC increment. Makes years pass by in seconds.
<TR align="left">
<TD nowrap>3:3</TD>
<TD nowrap>DAYS_SKIP</TD>
<TD nowrap>RW</TD>
<TD nowrap>SKIP DAYS INCREMENT 31 to 1, 30 to 1, 29 to 1, 28 to 1. Makes months pass by in seconds.</TD>
<TD>Assume a carry out on every RTC increment.
<TR align="left">
<TD nowrap>2:2</TD>
<TD nowrap>HOURS_SKIP</TD>
<TD nowrap>RW</TD>
<TD nowrap>SKIP HOURS INCREMENT 23 to 0 or 11 to 1.</TD>
<TD>Assume a carry out on every RTC increment. Makes days pass by in seconds.
<TR align="left">
<TD nowrap>1:1</TD>
<TD nowrap>MINUTES_SKIP</TD>
<TD nowrap>RW</TD>
<TD nowrap>SKIP MINUTES INCREMENT 59 to 0</TD>
<TD>Assume a carry out on every RTC increment. Makes hours pass by in seconds.
<TR align="left">
<TD nowrap>0:0</TD>
<TD nowrap>SECONDS_SKIP</TD>
<TD nowrap>RW</TD>
<TD nowrap>SKIP SECONDS INCREMENT 59 to 0</TD>
<TD>Assume a carry out on every RTC increment. Makes minutes pass by in seconds.
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>Provide debug controls for the blocks in the always on block.</P>
<BR><HR>
<H2 id="DEBUG_READ_WRITE"><A href="#index">
IO_RTC_DEBUG_READ_WRITE</A></H2>
<P><FONT size="+1"><B>Debug Read/Write Register</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_DEBUG_READ_WRITE ADDRESS:</B></TD>
<TD><CODE>0x500100f4</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#ffffff" colspan="32">VALUE<BR><TT>0x12345678</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:0</TD>
<TD nowrap>VALUE</TD>
<TD nowrap>RW</TD>
<TD nowrap>DBG RW</TD>
<TD>Debug Read/Write Register for Diagnostics.
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>Provide a read/write register for diagnostics.</P>
<BR><HR>
<H2 id="DEBUG0_READ_ONLY"><A href="#index">
IO_RTC_DEBUG0_READ_ONLY</A></H2>
<P><FONT size="+1"><B>Debug Read Only Value Register 0</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_DEBUG0_READ_ONLY ADDRESS:</B></TD>
<TD><CODE>0x500100f8</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#c0c0c0" colspan="32">VALUE<BR><TT>0xfeedf00d</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:0</TD>
<TD nowrap>VALUE</TD>
<TD nowrap>RO</TD>
<TD nowrap>DBG RO</TD>
<TD>Debug Read Only Value for Diagnostics.
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>Provide a read only value for diagnostics.</P>
<BR><HR>
<H2 id="DEBUG1_READ_ONLY"><A href="#index">
IO_RTC_DEBUG1_READ_ONLY</A></H2>
<P><FONT size="+1"><B>Debug Read Only Value Register 1</B></FONT></P>
<P>
<TABLE>
<TR><TD><B> IO_RTC_DEBUG1_READ_ONLY ADDRESS:</B></TD>
<TD><CODE>0x500100fc</CODE></TD></TR>
</TABLE>
<TABLE border="1" cellpadding="1" cellspacing="0">
<TR align="top" bgcolor="#888888">
<TD><SMALL><B>31</B></SMALL></TD>
<TD><SMALL><B>30</B></SMALL></TD>
<TD><SMALL><B>29</B></SMALL></TD>
<TD><SMALL><B>28</B></SMALL></TD>
<TD><SMALL><B>27</B></SMALL></TD>
<TD><SMALL><B>26</B></SMALL></TD>
<TD><SMALL><B>25</B></SMALL></TD>
<TD><SMALL><B>24</B></SMALL></TD>
<TD><SMALL><B>23</B></SMALL></TD>
<TD><SMALL><B>22</B></SMALL></TD>
<TD><SMALL><B>21</B></SMALL></TD>
<TD><SMALL><B>20</B></SMALL></TD>
<TD><SMALL><B>19</B></SMALL></TD>
<TD><SMALL><B>18</B></SMALL></TD>
<TD><SMALL><B>17</B></SMALL></TD>
<TD><SMALL><B>16</B></SMALL></TD>
<TD><SMALL><B>15</B></SMALL></TD>
<TD><SMALL><B>14</B></SMALL></TD>
<TD><SMALL><B>13</B></SMALL></TD>
<TD><SMALL><B>12</B></SMALL></TD>
<TD><SMALL><B>11</B></SMALL></TD>
<TD><SMALL><B>10</B></SMALL></TD>
<TD><SMALL><B>9</B></SMALL></TD>
<TD><SMALL><B>8</B></SMALL></TD>
<TD><SMALL><B>7</B></SMALL></TD>
<TD><SMALL><B>6</B></SMALL></TD>
<TD><SMALL><B>5</B></SMALL></TD>
<TD><SMALL><B>4</B></SMALL></TD>
<TD><SMALL><B>3</B></SMALL></TD>
<TD><SMALL><B>2</B></SMALL></TD>
<TD><SMALL><B>1</B></SMALL></TD>
<TD><SMALL><B>0</B></SMALL></TD>
</TR>
<TR>
<TD align="center" bgcolor="#c0c0c0" colspan="32">VALUE<BR><TT>0x1120ff2</TT>
</TD>
</TR>
</TABLE>
</p>
<BR/>
<TABLE border="1" cellpadding="3" cellspacing="0">
<TR align="left" bgcolor="#888888">
<TH><U><SMALL>Bits</SMALL></U></TH><TH><U><SMALL>Name</SMALL></U></TH><TH><U><SMALL>RW</SMALL></U></TH><TH><U><SMALL>Title</SMALL></U></TH><TH><U><SMALL>Description</SMALL></U></TH>
</TR>
<TR align="left">
<TD nowrap>31:0</TD>
<TD nowrap>VALUE</TD>
<TD nowrap>RO</TD>
<TD nowrap>DBG RO</TD>
<TD>Debug Read Only Value for Diagnostics.
</TD></TABLE>
</TD></TR></TABLE>



<P>
<B>Description:</B><BR>Provide a read only value for diagnostics.</P>

